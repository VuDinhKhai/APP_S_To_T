# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'report.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1182, 823)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_35.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_35.setSpacing(0)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.full_menu_widget = QtWidgets.QWidget(self.centralwidget)
        self.full_menu_widget.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.full_menu_widget.setFont(font)
        self.full_menu_widget.setStyleSheet("background-color: rgb(22, 24, 26);\n"
"color: rgb(255, 255, 255);")
        self.full_menu_widget.setObjectName("full_menu_widget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.full_menu_widget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.logo_label_2 = QtWidgets.QLabel(self.full_menu_widget)
        self.logo_label_2.setMinimumSize(QtCore.QSize(150, 50))
        self.logo_label_2.setMaximumSize(QtCore.QSize(40, 40))
        self.logo_label_2.setStyleSheet("image: url(:/newPrefix/logo2.jpg);")
        self.logo_label_2.setText("")
        self.logo_label_2.setScaledContents(True)
        self.logo_label_2.setObjectName("logo_label_2")
        self.horizontalLayout_2.addWidget(self.logo_label_2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_2)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.home_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.home_btn_2.sizePolicy().hasHeightForWidth())
        self.home_btn_2.setSizePolicy(sizePolicy)
        self.home_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.home_btn_2.setFont(font)
        self.home_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/home-4-32.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/home-4-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.home_btn_2.setIcon(icon)
        self.home_btn_2.setIconSize(QtCore.QSize(14, 14))
        self.home_btn_2.setCheckable(True)
        self.home_btn_2.setAutoExclusive(True)
        self.home_btn_2.setObjectName("home_btn_2")
        self.verticalLayout_2.addWidget(self.home_btn_2)
        self.dashborad_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dashborad_btn_2.sizePolicy().hasHeightForWidth())
        self.dashborad_btn_2.setSizePolicy(sizePolicy)
        self.dashborad_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.dashborad_btn_2.setFont(font)
        self.dashborad_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/dashboard-5-32.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/dashboard-5-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.dashborad_btn_2.setIcon(icon1)
        self.dashborad_btn_2.setIconSize(QtCore.QSize(14, 14))
        self.dashborad_btn_2.setCheckable(True)
        self.dashborad_btn_2.setAutoExclusive(True)
        self.dashborad_btn_2.setObjectName("dashborad_btn_2")
        self.verticalLayout_2.addWidget(self.dashborad_btn_2)
        self.orders_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.orders_btn_2.sizePolicy().hasHeightForWidth())
        self.orders_btn_2.setSizePolicy(sizePolicy)
        self.orders_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.orders_btn_2.setFont(font)
        self.orders_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/activity-feed-32.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/activity-feed-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.orders_btn_2.setIcon(icon2)
        self.orders_btn_2.setIconSize(QtCore.QSize(14, 14))
        self.orders_btn_2.setCheckable(True)
        self.orders_btn_2.setAutoExclusive(True)
        self.orders_btn_2.setObjectName("orders_btn_2")
        self.verticalLayout_2.addWidget(self.orders_btn_2)
        self.products_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.products_btn_2.sizePolicy().hasHeightForWidth())
        self.products_btn_2.setSizePolicy(sizePolicy)
        self.products_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.products_btn_2.setFont(font)
        self.products_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/product-32.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/product-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.products_btn_2.setIcon(icon3)
        self.products_btn_2.setIconSize(QtCore.QSize(14, 14))
        self.products_btn_2.setCheckable(True)
        self.products_btn_2.setAutoExclusive(True)
        self.products_btn_2.setObjectName("products_btn_2")
        self.verticalLayout_2.addWidget(self.products_btn_2)
        self.customers_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.customers_btn_2.sizePolicy().hasHeightForWidth())
        self.customers_btn_2.setSizePolicy(sizePolicy)
        self.customers_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.customers_btn_2.setFont(font)
        self.customers_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/group-32.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/group-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.customers_btn_2.setIcon(icon4)
        self.customers_btn_2.setIconSize(QtCore.QSize(14, 14))
        self.customers_btn_2.setCheckable(True)
        self.customers_btn_2.setAutoExclusive(True)
        self.customers_btn_2.setObjectName("customers_btn_2")
        self.verticalLayout_2.addWidget(self.customers_btn_2)
        self.source_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.source_btn_2.sizePolicy().hasHeightForWidth())
        self.source_btn_2.setSizePolicy(sizePolicy)
        self.source_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.source_btn_2.setFont(font)
        self.source_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/source_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/source.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.source_btn_2.setIcon(icon5)
        self.source_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.source_btn_2.setCheckable(True)
        self.source_btn_2.setAutoExclusive(True)
        self.source_btn_2.setObjectName("source_btn_2")
        self.verticalLayout_2.addWidget(self.source_btn_2)
        self.time_range_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time_range_btn_2.sizePolicy().hasHeightForWidth())
        self.time_range_btn_2.setSizePolicy(sizePolicy)
        self.time_range_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.time_range_btn_2.setFont(font)
        self.time_range_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/time_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/time.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.time_range_btn_2.setIcon(icon6)
        self.time_range_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.time_range_btn_2.setCheckable(True)
        self.time_range_btn_2.setAutoExclusive(True)
        self.time_range_btn_2.setObjectName("time_range_btn_2")
        self.verticalLayout_2.addWidget(self.time_range_btn_2)
        self.class_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_btn_2.sizePolicy().hasHeightForWidth())
        self.class_btn_2.setSizePolicy(sizePolicy)
        self.class_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.class_btn_2.setFont(font)
        self.class_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/class1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/class.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.class_btn_2.setIcon(icon7)
        self.class_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.class_btn_2.setCheckable(True)
        self.class_btn_2.setAutoExclusive(True)
        self.class_btn_2.setObjectName("class_btn_2")
        self.verticalLayout_2.addWidget(self.class_btn_2)
        self.person_attributes_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.person_attributes_btn_2.sizePolicy().hasHeightForWidth())
        self.person_attributes_btn_2.setSizePolicy(sizePolicy)
        self.person_attributes_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.person_attributes_btn_2.setFont(font)
        self.person_attributes_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/person_attributes1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/person_attributes.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.person_attributes_btn_2.setIcon(icon8)
        self.person_attributes_btn_2.setIconSize(QtCore.QSize(20, 17))
        self.person_attributes_btn_2.setCheckable(True)
        self.person_attributes_btn_2.setAutoExclusive(True)
        self.person_attributes_btn_2.setObjectName("person_attributes_btn_2")
        self.verticalLayout_2.addWidget(self.person_attributes_btn_2)
        self.color_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_btn_2.sizePolicy().hasHeightForWidth())
        self.color_btn_2.setSizePolicy(sizePolicy)
        self.color_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.color_btn_2.setFont(font)
        self.color_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/newPrefix/color1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon9.addPixmap(QtGui.QPixmap(":/newPrefix/color.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.color_btn_2.setIcon(icon9)
        self.color_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.color_btn_2.setCheckable(True)
        self.color_btn_2.setAutoExclusive(True)
        self.color_btn_2.setObjectName("color_btn_2")
        self.verticalLayout_2.addWidget(self.color_btn_2)
        self.size_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.size_btn_2.sizePolicy().hasHeightForWidth())
        self.size_btn_2.setSizePolicy(sizePolicy)
        self.size_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.size_btn_2.setFont(font)
        self.size_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/size1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/size.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.size_btn_2.setIcon(icon10)
        self.size_btn_2.setIconSize(QtCore.QSize(14, 14))
        self.size_btn_2.setCheckable(True)
        self.size_btn_2.setAutoExclusive(True)
        self.size_btn_2.setObjectName("size_btn_2")
        self.verticalLayout_2.addWidget(self.size_btn_2)
        self.speed_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speed_btn_2.sizePolicy().hasHeightForWidth())
        self.speed_btn_2.setSizePolicy(sizePolicy)
        self.speed_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.speed_btn_2.setFont(font)
        self.speed_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/newPrefix/speed1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon11.addPixmap(QtGui.QPixmap(":/newPrefix/speed.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.speed_btn_2.setIcon(icon11)
        self.speed_btn_2.setIconSize(QtCore.QSize(19, 19))
        self.speed_btn_2.setCheckable(True)
        self.speed_btn_2.setAutoExclusive(True)
        self.speed_btn_2.setObjectName("speed_btn_2")
        self.verticalLayout_2.addWidget(self.speed_btn_2)
        self.dwell_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dwell_btn_2.sizePolicy().hasHeightForWidth())
        self.dwell_btn_2.setSizePolicy(sizePolicy)
        self.dwell_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.dwell_btn_2.setFont(font)
        self.dwell_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/newPrefix/dwell1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon12.addPixmap(QtGui.QPixmap(":/newPrefix/dwell.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.dwell_btn_2.setIcon(icon12)
        self.dwell_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.dwell_btn_2.setCheckable(True)
        self.dwell_btn_2.setAutoExclusive(True)
        self.dwell_btn_2.setObjectName("dwell_btn_2")
        self.verticalLayout_2.addWidget(self.dwell_btn_2)
        self.direction_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.direction_btn_2.sizePolicy().hasHeightForWidth())
        self.direction_btn_2.setSizePolicy(sizePolicy)
        self.direction_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.direction_btn_2.setFont(font)
        self.direction_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/newPrefix/direction1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon13.addPixmap(QtGui.QPixmap(":/newPrefix/direction.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.direction_btn_2.setIcon(icon13)
        self.direction_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.direction_btn_2.setCheckable(True)
        self.direction_btn_2.setAutoExclusive(True)
        self.direction_btn_2.setObjectName("direction_btn_2")
        self.verticalLayout_2.addWidget(self.direction_btn_2)
        self.proximity_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.proximity_btn_2.sizePolicy().hasHeightForWidth())
        self.proximity_btn_2.setSizePolicy(sizePolicy)
        self.proximity_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.proximity_btn_2.setFont(font)
        self.proximity_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/newPrefix/proximity1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon14.addPixmap(QtGui.QPixmap(":/newPrefix/proximity.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.proximity_btn_2.setIcon(icon14)
        self.proximity_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.proximity_btn_2.setCheckable(True)
        self.proximity_btn_2.setAutoExclusive(True)
        self.proximity_btn_2.setObjectName("proximity_btn_2")
        self.verticalLayout_2.addWidget(self.proximity_btn_2)
        self.appearance_similarity_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.appearance_similarity_btn_2.sizePolicy().hasHeightForWidth())
        self.appearance_similarity_btn_2.setSizePolicy(sizePolicy)
        self.appearance_similarity_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.appearance_similarity_btn_2.setFont(font)
        self.appearance_similarity_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/newPrefix/Appearance_Similarity1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon15.addPixmap(QtGui.QPixmap(":/newPrefix/Appearance_Similarity.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.appearance_similarity_btn_2.setIcon(icon15)
        self.appearance_similarity_btn_2.setIconSize(QtCore.QSize(19, 20))
        self.appearance_similarity_btn_2.setCheckable(True)
        self.appearance_similarity_btn_2.setAutoExclusive(True)
        self.appearance_similarity_btn_2.setObjectName("appearance_similarity_btn_2")
        self.verticalLayout_2.addWidget(self.appearance_similarity_btn_2)
        self.face_recognition_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.face_recognition_btn_2.sizePolicy().hasHeightForWidth())
        self.face_recognition_btn_2.setSizePolicy(sizePolicy)
        self.face_recognition_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.face_recognition_btn_2.setFont(font)
        self.face_recognition_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/newPrefix/face_reco1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon16.addPixmap(QtGui.QPixmap(":/newPrefix/face_reco.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.face_recognition_btn_2.setIcon(icon16)
        self.face_recognition_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.face_recognition_btn_2.setCheckable(True)
        self.face_recognition_btn_2.setAutoExclusive(True)
        self.face_recognition_btn_2.setObjectName("face_recognition_btn_2")
        self.verticalLayout_2.addWidget(self.face_recognition_btn_2)
        self.License_plate_reco_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.License_plate_reco_btn_2.sizePolicy().hasHeightForWidth())
        self.License_plate_reco_btn_2.setSizePolicy(sizePolicy)
        self.License_plate_reco_btn_2.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.License_plate_reco_btn_2.setFont(font)
        self.License_plate_reco_btn_2.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/newPrefix/license-plate1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon17.addPixmap(QtGui.QPixmap(":/newPrefix/license-plate.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.License_plate_reco_btn_2.setIcon(icon17)
        self.License_plate_reco_btn_2.setIconSize(QtCore.QSize(20, 21))
        self.License_plate_reco_btn_2.setCheckable(True)
        self.License_plate_reco_btn_2.setAutoExclusive(True)
        self.License_plate_reco_btn_2.setObjectName("License_plate_reco_btn_2")
        self.verticalLayout_2.addWidget(self.License_plate_reco_btn_2)
        spacerItem = QtWidgets.QSpacerItem(20, 373, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        self.exit_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exit_btn_2.sizePolicy().hasHeightForWidth())
        self.exit_btn_2.setSizePolicy(sizePolicy)
        self.exit_btn_2.setMinimumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.exit_btn_2.setFont(font)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/newPrefix/close-window-64.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.exit_btn_2.setIcon(icon18)
        self.exit_btn_2.setIconSize(QtCore.QSize(22, 22))
        self.exit_btn_2.setObjectName("exit_btn_2")
        self.verticalLayout_4.addWidget(self.exit_btn_2)
        self.gridLayout_35.addWidget(self.full_menu_widget, 0, 2, 1, 1)
        self.splitter_4 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_4.setOrientation(QtCore.Qt.Vertical)
        self.splitter_4.setObjectName("splitter_4")
        self.gridLayout_35.addWidget(self.splitter_4, 0, 1, 1, 1)
        self.icon_only_widget = QtWidgets.QWidget(self.centralwidget)
        self.icon_only_widget.setStyleSheet("background-color: rgb(22, 24, 26);\n"
"color: rgb(255, 255, 255);")
        self.icon_only_widget.setObjectName("icon_only_widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.icon_only_widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.logo_label_1 = QtWidgets.QLabel(self.icon_only_widget)
        self.logo_label_1.setMinimumSize(QtCore.QSize(50, 50))
        self.logo_label_1.setMaximumSize(QtCore.QSize(50, 50))
        self.logo_label_1.setStyleSheet("image: url(:/newPrefix/logo2.jpg);")
        self.logo_label_1.setText("")
        self.logo_label_1.setScaledContents(True)
        self.logo_label_1.setObjectName("logo_label_1")
        self.horizontalLayout_3.addWidget(self.logo_label_1)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.home_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.home_btn_1.sizePolicy().hasHeightForWidth())
        self.home_btn_1.setSizePolicy(sizePolicy)
        self.home_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.home_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.home_btn_1.setText("")
        self.home_btn_1.setIcon(icon)
        self.home_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.home_btn_1.setCheckable(True)
        self.home_btn_1.setAutoExclusive(True)
        self.home_btn_1.setObjectName("home_btn_1")
        self.verticalLayout.addWidget(self.home_btn_1)
        self.dashborad_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dashborad_btn_1.sizePolicy().hasHeightForWidth())
        self.dashborad_btn_1.setSizePolicy(sizePolicy)
        self.dashborad_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.dashborad_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.dashborad_btn_1.setText("")
        self.dashborad_btn_1.setIcon(icon1)
        self.dashborad_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.dashborad_btn_1.setCheckable(True)
        self.dashborad_btn_1.setAutoExclusive(True)
        self.dashborad_btn_1.setObjectName("dashborad_btn_1")
        self.verticalLayout.addWidget(self.dashborad_btn_1)
        self.orders_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.orders_btn_1.sizePolicy().hasHeightForWidth())
        self.orders_btn_1.setSizePolicy(sizePolicy)
        self.orders_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.orders_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.orders_btn_1.setText("")
        self.orders_btn_1.setIcon(icon2)
        self.orders_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.orders_btn_1.setCheckable(True)
        self.orders_btn_1.setAutoExclusive(True)
        self.orders_btn_1.setObjectName("orders_btn_1")
        self.verticalLayout.addWidget(self.orders_btn_1)
        self.products_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.products_btn_1.sizePolicy().hasHeightForWidth())
        self.products_btn_1.setSizePolicy(sizePolicy)
        self.products_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.products_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.products_btn_1.setText("")
        self.products_btn_1.setIcon(icon3)
        self.products_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.products_btn_1.setCheckable(True)
        self.products_btn_1.setAutoExclusive(True)
        self.products_btn_1.setObjectName("products_btn_1")
        self.verticalLayout.addWidget(self.products_btn_1)
        self.customers_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.customers_btn_1.sizePolicy().hasHeightForWidth())
        self.customers_btn_1.setSizePolicy(sizePolicy)
        self.customers_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.customers_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.customers_btn_1.setText("")
        self.customers_btn_1.setIcon(icon4)
        self.customers_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.customers_btn_1.setCheckable(True)
        self.customers_btn_1.setAutoExclusive(True)
        self.customers_btn_1.setObjectName("customers_btn_1")
        self.verticalLayout.addWidget(self.customers_btn_1)
        self.source_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.source_btn_1.sizePolicy().hasHeightForWidth())
        self.source_btn_1.setSizePolicy(sizePolicy)
        self.source_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.source_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.source_btn_1.setText("")
        self.source_btn_1.setIcon(icon5)
        self.source_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.source_btn_1.setCheckable(True)
        self.source_btn_1.setAutoExclusive(True)
        self.source_btn_1.setObjectName("source_btn_1")
        self.verticalLayout.addWidget(self.source_btn_1)
        self.time_range_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time_range_btn_1.sizePolicy().hasHeightForWidth())
        self.time_range_btn_1.setSizePolicy(sizePolicy)
        self.time_range_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.time_range_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.time_range_btn_1.setText("")
        self.time_range_btn_1.setIcon(icon6)
        self.time_range_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.time_range_btn_1.setCheckable(True)
        self.time_range_btn_1.setAutoExclusive(True)
        self.time_range_btn_1.setObjectName("time_range_btn_1")
        self.verticalLayout.addWidget(self.time_range_btn_1)
        self.class_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_btn_1.sizePolicy().hasHeightForWidth())
        self.class_btn_1.setSizePolicy(sizePolicy)
        self.class_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.class_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.class_btn_1.setText("")
        self.class_btn_1.setIcon(icon7)
        self.class_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.class_btn_1.setCheckable(True)
        self.class_btn_1.setAutoExclusive(True)
        self.class_btn_1.setObjectName("class_btn_1")
        self.verticalLayout.addWidget(self.class_btn_1)
        self.person_attributes_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.person_attributes_btn_1.sizePolicy().hasHeightForWidth())
        self.person_attributes_btn_1.setSizePolicy(sizePolicy)
        self.person_attributes_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.person_attributes_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.person_attributes_btn_1.setText("")
        self.person_attributes_btn_1.setIcon(icon8)
        self.person_attributes_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.person_attributes_btn_1.setCheckable(True)
        self.person_attributes_btn_1.setAutoExclusive(True)
        self.person_attributes_btn_1.setObjectName("person_attributes_btn_1")
        self.verticalLayout.addWidget(self.person_attributes_btn_1)
        self.color_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_btn_1.sizePolicy().hasHeightForWidth())
        self.color_btn_1.setSizePolicy(sizePolicy)
        self.color_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.color_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.color_btn_1.setText("")
        self.color_btn_1.setIcon(icon9)
        self.color_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.color_btn_1.setCheckable(True)
        self.color_btn_1.setAutoExclusive(True)
        self.color_btn_1.setObjectName("color_btn_1")
        self.verticalLayout.addWidget(self.color_btn_1)
        self.size_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.size_btn_1.sizePolicy().hasHeightForWidth())
        self.size_btn_1.setSizePolicy(sizePolicy)
        self.size_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.size_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.size_btn_1.setText("")
        self.size_btn_1.setIcon(icon10)
        self.size_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.size_btn_1.setCheckable(True)
        self.size_btn_1.setAutoExclusive(True)
        self.size_btn_1.setObjectName("size_btn_1")
        self.verticalLayout.addWidget(self.size_btn_1)
        self.speed_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speed_btn_1.sizePolicy().hasHeightForWidth())
        self.speed_btn_1.setSizePolicy(sizePolicy)
        self.speed_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.speed_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.speed_btn_1.setText("")
        self.speed_btn_1.setIcon(icon11)
        self.speed_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.speed_btn_1.setCheckable(True)
        self.speed_btn_1.setAutoExclusive(True)
        self.speed_btn_1.setObjectName("speed_btn_1")
        self.verticalLayout.addWidget(self.speed_btn_1)
        self.dwell_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dwell_btn_1.sizePolicy().hasHeightForWidth())
        self.dwell_btn_1.setSizePolicy(sizePolicy)
        self.dwell_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.dwell_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.dwell_btn_1.setText("")
        self.dwell_btn_1.setIcon(icon12)
        self.dwell_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.dwell_btn_1.setCheckable(True)
        self.dwell_btn_1.setAutoExclusive(True)
        self.dwell_btn_1.setObjectName("dwell_btn_1")
        self.verticalLayout.addWidget(self.dwell_btn_1)
        self.direction_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.direction_btn_1.sizePolicy().hasHeightForWidth())
        self.direction_btn_1.setSizePolicy(sizePolicy)
        self.direction_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.direction_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.direction_btn_1.setText("")
        self.direction_btn_1.setIcon(icon13)
        self.direction_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.direction_btn_1.setCheckable(True)
        self.direction_btn_1.setAutoExclusive(True)
        self.direction_btn_1.setObjectName("direction_btn_1")
        self.verticalLayout.addWidget(self.direction_btn_1)
        self.proximity_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.proximity_btn_1.sizePolicy().hasHeightForWidth())
        self.proximity_btn_1.setSizePolicy(sizePolicy)
        self.proximity_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.proximity_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.proximity_btn_1.setText("")
        self.proximity_btn_1.setIcon(icon14)
        self.proximity_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.proximity_btn_1.setCheckable(True)
        self.proximity_btn_1.setAutoExclusive(True)
        self.proximity_btn_1.setObjectName("proximity_btn_1")
        self.verticalLayout.addWidget(self.proximity_btn_1)
        self.appearance_similarity_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.appearance_similarity_btn_1.sizePolicy().hasHeightForWidth())
        self.appearance_similarity_btn_1.setSizePolicy(sizePolicy)
        self.appearance_similarity_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.appearance_similarity_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.appearance_similarity_btn_1.setText("")
        self.appearance_similarity_btn_1.setIcon(icon15)
        self.appearance_similarity_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.appearance_similarity_btn_1.setCheckable(True)
        self.appearance_similarity_btn_1.setAutoExclusive(True)
        self.appearance_similarity_btn_1.setObjectName("appearance_similarity_btn_1")
        self.verticalLayout.addWidget(self.appearance_similarity_btn_1)
        self.face_recognition_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.face_recognition_btn_1.sizePolicy().hasHeightForWidth())
        self.face_recognition_btn_1.setSizePolicy(sizePolicy)
        self.face_recognition_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.face_recognition_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.face_recognition_btn_1.setText("")
        self.face_recognition_btn_1.setIcon(icon16)
        self.face_recognition_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.face_recognition_btn_1.setCheckable(True)
        self.face_recognition_btn_1.setAutoExclusive(True)
        self.face_recognition_btn_1.setObjectName("face_recognition_btn_1")
        self.verticalLayout.addWidget(self.face_recognition_btn_1)
        self.License_plate_reco_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.License_plate_reco_btn_1.sizePolicy().hasHeightForWidth())
        self.License_plate_reco_btn_1.setSizePolicy(sizePolicy)
        self.License_plate_reco_btn_1.setMinimumSize(QtCore.QSize(0, 30))
        self.License_plate_reco_btn_1.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.License_plate_reco_btn_1.setText("")
        self.License_plate_reco_btn_1.setIcon(icon17)
        self.License_plate_reco_btn_1.setIconSize(QtCore.QSize(20, 20))
        self.License_plate_reco_btn_1.setCheckable(True)
        self.License_plate_reco_btn_1.setAutoExclusive(True)
        self.License_plate_reco_btn_1.setObjectName("License_plate_reco_btn_1")
        self.verticalLayout.addWidget(self.License_plate_reco_btn_1)
        self.verticalLayout_3.addLayout(self.verticalLayout)
        spacerItem1 = QtWidgets.QSpacerItem(20, 375, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem1)
        self.exit_btn_1 = QtWidgets.QPushButton(self.icon_only_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exit_btn_1.sizePolicy().hasHeightForWidth())
        self.exit_btn_1.setSizePolicy(sizePolicy)
        self.exit_btn_1.setMinimumSize(QtCore.QSize(0, 40))
        self.exit_btn_1.setStyleSheet("")
        self.exit_btn_1.setText("")
        self.exit_btn_1.setIcon(icon18)
        self.exit_btn_1.setIconSize(QtCore.QSize(24, 24))
        self.exit_btn_1.setObjectName("exit_btn_1")
        self.verticalLayout_3.addWidget(self.exit_btn_1)
        self.gridLayout_35.addWidget(self.icon_only_widget, 0, 0, 1, 1)
        self.widget_3 = QtWidgets.QWidget(self.centralwidget)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.widget = QtWidgets.QWidget(self.widget_3)
        self.widget.setMinimumSize(QtCore.QSize(0, 40))
        self.widget.setObjectName("widget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_4.setContentsMargins(0, 0, 9, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.change_btn = QtWidgets.QPushButton(self.widget)
        self.change_btn.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/newPrefix/menu-4-32.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon19.addPixmap(QtGui.QPixmap(":/newPrefix/activity-feed-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.change_btn.setIcon(icon19)
        self.change_btn.setIconSize(QtCore.QSize(14, 14))
        self.change_btn.setCheckable(True)
        self.change_btn.setObjectName("change_btn")
        self.horizontalLayout_4.addWidget(self.change_btn)
        spacerItem2 = QtWidgets.QSpacerItem(236, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(10)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.search_input = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search_input.sizePolicy().hasHeightForWidth())
        self.search_input.setSizePolicy(sizePolicy)
        self.search_input.setMinimumSize(QtCore.QSize(0, 20))
        self.search_input.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.search_input.setFont(font)
        self.search_input.setStyleSheet("color: rgb(255, 255, 255);")
        self.search_input.setObjectName("search_input")
        self.horizontalLayout.addWidget(self.search_input)
        self.search_btn = QtWidgets.QPushButton(self.widget)
        self.search_btn.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.search_btn.setText("")
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/newPrefix/search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search_btn.setIcon(icon20)
        self.search_btn.setObjectName("search_btn")
        self.horizontalLayout.addWidget(self.search_btn)
        self.horizontalLayout_4.addLayout(self.horizontalLayout)
        spacerItem3 = QtWidgets.QSpacerItem(236, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem3)
        self.user_btn = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.user_btn.sizePolicy().hasHeightForWidth())
        self.user_btn.setSizePolicy(sizePolicy)
        self.user_btn.setStyleSheet("            QPushButton:pressed {\n"
"                background-color: #77797d; /* Màu nền khi nhấp chuột */\n"
"            }")
        self.user_btn.setText("")
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/newPrefix/user-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.user_btn.setIcon(icon21)
        self.user_btn.setObjectName("user_btn")
        self.horizontalLayout_4.addWidget(self.user_btn)
        self.verticalLayout_5.addWidget(self.widget)
        self.stackedWidget = QtWidgets.QStackedWidget(self.widget_3)
        self.stackedWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_home = QtWidgets.QWidget()
        self.page_home.setObjectName("page_home")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.page_home)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_4 = QtWidgets.QLabel(self.page_home)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_home)
        self.page_dashboard = QtWidgets.QWidget()
        self.page_dashboard.setObjectName("page_dashboard")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.page_dashboard)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_5 = QtWidgets.QLabel(self.page_dashboard)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_dashboard)
        self.page_orders = QtWidgets.QWidget()
        self.page_orders.setObjectName("page_orders")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.page_orders)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_6 = QtWidgets.QLabel(self.page_orders)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_4.addWidget(self.label_6, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_orders)
        self.page_product = QtWidgets.QWidget()
        self.page_product.setObjectName("page_product")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.page_product)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_7 = QtWidgets.QLabel(self.page_product)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout_5.addWidget(self.label_7, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_product)
        self.page_customer = QtWidgets.QWidget()
        self.page_customer.setObjectName("page_customer")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.page_customer)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_8 = QtWidgets.QLabel(self.page_customer)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_6.addWidget(self.label_8, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_customer)
        self.page_source = QtWidgets.QWidget()
        self.page_source.setObjectName("page_source")
        self.gridLayout_59 = QtWidgets.QGridLayout(self.page_source)
        self.gridLayout_59.setObjectName("gridLayout_59")
        self.splitter_source = QtWidgets.QSplitter(self.page_source)
        self.splitter_source.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_source.setObjectName("splitter_source")
        self.source_menu_widget_2 = QtWidgets.QWidget(self.splitter_source)
        self.source_menu_widget_2.setMinimumSize(QtCore.QSize(150, 0))
        self.source_menu_widget_2.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.source_menu_widget_2.setObjectName("source_menu_widget_2")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.source_menu_widget_2)
        self.gridLayout_21.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_21.setSpacing(0)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.scrollArea_4 = QtWidgets.QScrollArea(self.source_menu_widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_4.sizePolicy().hasHeightForWidth())
        self.scrollArea_4.setSizePolicy(sizePolicy)
        self.scrollArea_4.setWidgetResizable(True)
        self.scrollArea_4.setObjectName("scrollArea_4")
        self.scrollAreaWidgetContents_5 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_5.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_5.setObjectName("scrollAreaWidgetContents_5")
        self.scrollArea_4.setWidget(self.scrollAreaWidgetContents_5)
        self.gridLayout_21.addWidget(self.scrollArea_4, 0, 0, 1, 1)
        self.source_menu_widget = QtWidgets.QWidget(self.splitter_source)
        self.source_menu_widget.setMinimumSize(QtCore.QSize(150, 0))
        self.source_menu_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.source_menu_widget.setObjectName("source_menu_widget")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.source_menu_widget)
        self.gridLayout_22.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_22.setSpacing(0)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.scrollArea_5 = QtWidgets.QScrollArea(self.source_menu_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_5.sizePolicy().hasHeightForWidth())
        self.scrollArea_5.setSizePolicy(sizePolicy)
        self.scrollArea_5.setWidgetResizable(True)
        self.scrollArea_5.setObjectName("scrollArea_5")
        self.scrollAreaWidgetContents_6 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_6.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_6.setObjectName("scrollAreaWidgetContents_6")
        self.scrollArea_5.setWidget(self.scrollAreaWidgetContents_6)
        self.gridLayout_22.addWidget(self.scrollArea_5, 0, 0, 1, 1)
        self.source_main_widget = QtWidgets.QWidget(self.splitter_source)
        self.source_main_widget.setObjectName("source_main_widget")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.source_main_widget)
        self.gridLayout_23.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_23.setSpacing(0)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.source_frame_main = QtWidgets.QFrame(self.source_main_widget)
        self.source_frame_main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.source_frame_main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.source_frame_main.setObjectName("source_frame_main")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.source_frame_main)
        self.gridLayout_24.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_24.setSpacing(0)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.scrollArea_6 = QtWidgets.QScrollArea(self.source_frame_main)
        self.scrollArea_6.setWidgetResizable(True)
        self.scrollArea_6.setObjectName("scrollArea_6")
        self.scrollAreaWidgetContents_7 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_7.setGeometry(QtCore.QRect(0, 0, 603, 721))
        self.scrollAreaWidgetContents_7.setObjectName("scrollAreaWidgetContents_7")
        self.scrollArea_6.setWidget(self.scrollAreaWidgetContents_7)
        self.gridLayout_24.addWidget(self.scrollArea_6, 0, 0, 1, 1)
        self.gridLayout_23.addWidget(self.source_frame_main, 1, 0, 1, 1)
        self.source_search_widget = QtWidgets.QWidget(self.source_main_widget)
        self.source_search_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.source_search_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.source_search_widget.setObjectName("source_search_widget")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.source_search_widget)
        self.gridLayout_30.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_30.setSpacing(0)
        self.gridLayout_30.setObjectName("gridLayout_30")
        spacerItem4 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem4, 0, 3, 1, 1)
        self.source_Button = QtWidgets.QPushButton(self.source_search_widget)
        self.source_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.source_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.source_Button.setText("")
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icon/icon/arrow-96-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon22.addPixmap(QtGui.QPixmap(":/icon/icon/arrow-31-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.source_Button.setIcon(icon22)
        self.source_Button.setIconSize(QtCore.QSize(15, 15))
        self.source_Button.setCheckable(True)
        self.source_Button.setObjectName("source_Button")
        self.gridLayout_30.addWidget(self.source_Button, 0, 0, 1, 1)
        self.source_time_label = QtWidgets.QLabel(self.source_search_widget)
        self.source_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.source_time_label.setFont(font)
        self.source_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.source_time_label.setObjectName("source_time_label")
        self.gridLayout_30.addWidget(self.source_time_label, 0, 2, 1, 1)
        self.source_Button_fitter = QtWidgets.QPushButton(self.source_search_widget)
        self.source_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.source_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.source_Button_fitter.setText("")
        self.source_Button_fitter.setIcon(icon22)
        self.source_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.source_Button_fitter.setCheckable(True)
        self.source_Button_fitter.setObjectName("source_Button_fitter")
        self.gridLayout_30.addWidget(self.source_Button_fitter, 1, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem5, 0, 1, 1, 1)
        self.source_text_fitter_label = QtWidgets.QLabel(self.source_search_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.source_text_fitter_label.setFont(font)
        self.source_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.source_text_fitter_label.setObjectName("source_text_fitter_label")
        self.gridLayout_30.addWidget(self.source_text_fitter_label, 1, 1, 1, 3)
        self.gridLayout_23.addWidget(self.source_search_widget, 0, 0, 1, 1)
        self.gridLayout_59.addWidget(self.splitter_source, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_source)
        self.page_time_range = QtWidgets.QWidget()
        self.page_time_range.setObjectName("page_time_range")
        self.gridLayout_61 = QtWidgets.QGridLayout(self.page_time_range)
        self.gridLayout_61.setObjectName("gridLayout_61")
        self.splitter_time = QtWidgets.QSplitter(self.page_time_range)
        self.splitter_time.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_time.setObjectName("splitter_time")
        self.scrollArea_13 = QtWidgets.QScrollArea(self.splitter_time)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_13.sizePolicy().hasHeightForWidth())
        self.scrollArea_13.setSizePolicy(sizePolicy)
        self.scrollArea_13.setMinimumSize(QtCore.QSize(150, 50))
        self.scrollArea_13.setWidgetResizable(True)
        self.scrollArea_13.setObjectName("scrollArea_13")
        self.scrollAreaWidgetContents_16 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_16.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_16.setObjectName("scrollAreaWidgetContents_16")
        self.scrollArea_13.setWidget(self.scrollAreaWidgetContents_16)
        self.scrollArea_14 = QtWidgets.QScrollArea(self.splitter_time)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_14.sizePolicy().hasHeightForWidth())
        self.scrollArea_14.setSizePolicy(sizePolicy)
        self.scrollArea_14.setMinimumSize(QtCore.QSize(150, 50))
        self.scrollArea_14.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.scrollArea_14.setWidgetResizable(True)
        self.scrollArea_14.setObjectName("scrollArea_14")
        self.scrollAreaWidgetContents_17 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_17.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_17.setObjectName("scrollAreaWidgetContents_17")
        self.scrollArea_14.setWidget(self.scrollAreaWidgetContents_17)
        self.layoutWidget = QtWidgets.QWidget(self.splitter_time)
        self.layoutWidget.setObjectName("layoutWidget")
        self.page_main_widget = QtWidgets.QGridLayout(self.layoutWidget)
        self.page_main_widget.setContentsMargins(0, 0, 0, 0)
        self.page_main_widget.setSpacing(0)
        self.page_main_widget.setObjectName("page_main_widget")
        self.time_range_search_widget_3 = QtWidgets.QWidget(self.layoutWidget)
        self.time_range_search_widget_3.setMaximumSize(QtCore.QSize(16777215, 50))
        self.time_range_search_widget_3.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.time_range_search_widget_3.setObjectName("time_range_search_widget_3")
        self.gridLayout_57 = QtWidgets.QGridLayout(self.time_range_search_widget_3)
        self.gridLayout_57.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_57.setSpacing(0)
        self.gridLayout_57.setObjectName("gridLayout_57")
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_57.addItem(spacerItem6, 0, 1, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_57.addItem(spacerItem7, 0, 3, 1, 1)
        self.time_range_Button = QtWidgets.QPushButton(self.time_range_search_widget_3)
        self.time_range_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.time_range_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.time_range_Button.setText("")
        self.time_range_Button.setIcon(icon22)
        self.time_range_Button.setIconSize(QtCore.QSize(15, 15))
        self.time_range_Button.setCheckable(True)
        self.time_range_Button.setObjectName("time_range_Button")
        self.gridLayout_57.addWidget(self.time_range_Button, 1, 0, 1, 1)
        self.time_range_text_fitter_label = QtWidgets.QLabel(self.time_range_search_widget_3)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.time_range_text_fitter_label.setFont(font)
        self.time_range_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.time_range_text_fitter_label.setObjectName("time_range_text_fitter_label")
        self.gridLayout_57.addWidget(self.time_range_text_fitter_label, 1, 1, 1, 3)
        self.time_range__Button_fitter = QtWidgets.QPushButton(self.time_range_search_widget_3)
        self.time_range__Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.time_range__Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.time_range__Button_fitter.setText("")
        self.time_range__Button_fitter.setIcon(icon22)
        self.time_range__Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.time_range__Button_fitter.setCheckable(True)
        self.time_range__Button_fitter.setObjectName("time_range__Button_fitter")
        self.gridLayout_57.addWidget(self.time_range__Button_fitter, 0, 0, 1, 1)
        self.time_range__time_label = QtWidgets.QLabel(self.time_range_search_widget_3)
        self.time_range__time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.time_range__time_label.setFont(font)
        self.time_range__time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.time_range__time_label.setObjectName("time_range__time_label")
        self.gridLayout_57.addWidget(self.time_range__time_label, 0, 2, 1, 1)
        self.page_main_widget.addWidget(self.time_range_search_widget_3, 0, 0, 1, 1)
        self.scrollArea_15 = QtWidgets.QScrollArea(self.layoutWidget)
        self.scrollArea_15.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.scrollArea_15.setWidgetResizable(True)
        self.scrollArea_15.setObjectName("scrollArea_15")
        self.scrollAreaWidgetContents_18 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_18.setGeometry(QtCore.QRect(0, 0, 603, 721))
        self.scrollAreaWidgetContents_18.setObjectName("scrollAreaWidgetContents_18")
        self.scrollArea_15.setWidget(self.scrollAreaWidgetContents_18)
        self.page_main_widget.addWidget(self.scrollArea_15, 1, 0, 1, 1)
        self.gridLayout_61.addWidget(self.splitter_time, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_time_range)
        self.page_class = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setPointSize(10)
        self.page_class.setFont(font)
        self.page_class.setObjectName("page_class")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.page_class)
        self.gridLayout_9.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_9.setSpacing(6)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.splitter_3 = QtWidgets.QSplitter(self.page_class)
        self.splitter_3.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_3.setObjectName("splitter_3")
        self.class_scrollArea = QtWidgets.QScrollArea(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_scrollArea.sizePolicy().hasHeightForWidth())
        self.class_scrollArea.setSizePolicy(sizePolicy)
        self.class_scrollArea.setMinimumSize(QtCore.QSize(150, 50))
        self.class_scrollArea.setWidgetResizable(True)
        self.class_scrollArea.setObjectName("class_scrollArea")
        self.scrollAreaWidgetContents_27 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_27.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_27.setObjectName("scrollAreaWidgetContents_27")
        self.class_scrollArea.setWidget(self.scrollAreaWidgetContents_27)
        self.splitter_2 = QtWidgets.QSplitter(self.splitter_3)
        self.splitter_2.setStyleSheet("background-color: rgb(38, 42, 48);")
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.class_fitter_scrollArea = QtWidgets.QScrollArea(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_fitter_scrollArea.sizePolicy().hasHeightForWidth())
        self.class_fitter_scrollArea.setSizePolicy(sizePolicy)
        self.class_fitter_scrollArea.setMinimumSize(QtCore.QSize(200, 60))
        self.class_fitter_scrollArea.setMaximumSize(QtCore.QSize(200, 16777215))
        self.class_fitter_scrollArea.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.class_fitter_scrollArea.setWidgetResizable(True)
        self.class_fitter_scrollArea.setObjectName("class_fitter_scrollArea")
        self.scrollAreaWidgetContents_25 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_25.setGeometry(QtCore.QRect(0, 0, 186, 2939))
        self.scrollAreaWidgetContents_25.setObjectName("scrollAreaWidgetContents_25")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_25)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.class_banana_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_banana_checkBox.sizePolicy().hasHeightForWidth())
        self.class_banana_checkBox.setSizePolicy(sizePolicy)
        self.class_banana_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_banana_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_banana_checkBox.setFont(font)
        self.class_banana_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_banana_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_banana_checkBox.setObjectName("class_banana_checkBox")
        self.gridLayout_25.addWidget(self.class_banana_checkBox, 44, 1, 1, 1)
        self.class_tennis_racket_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_tennis_racket_checkBox.sizePolicy().hasHeightForWidth())
        self.class_tennis_racket_checkBox.setSizePolicy(sizePolicy)
        self.class_tennis_racket_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_tennis_racket_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_tennis_racket_checkBox.setFont(font)
        self.class_tennis_racket_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_tennis_racket_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_tennis_racket_checkBox.setObjectName("class_tennis_racket_checkBox")
        self.gridLayout_25.addWidget(self.class_tennis_racket_checkBox, 36, 1, 1, 1)
        self.class_microwave_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_microwave_checkBox.sizePolicy().hasHeightForWidth())
        self.class_microwave_checkBox.setSizePolicy(sizePolicy)
        self.class_microwave_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_microwave_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_microwave_checkBox.setFont(font)
        self.class_microwave_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_microwave_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_microwave_checkBox.setObjectName("class_microwave_checkBox")
        self.gridLayout_25.addWidget(self.class_microwave_checkBox, 66, 1, 1, 1)
        self.class_bench_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_bench_checkBox.sizePolicy().hasHeightForWidth())
        self.class_bench_checkBox.setSizePolicy(sizePolicy)
        self.class_bench_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_bench_checkBox.setFont(font)
        self.class_bench_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_bench_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_bench_checkBox.setObjectName("class_bench_checkBox")
        self.gridLayout_25.addWidget(self.class_bench_checkBox, 22, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.scrollAreaWidgetContents_25)
        self.label_3.setMaximumSize(QtCore.QSize(15, 16777215))
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.gridLayout_25.addWidget(self.label_3, 2, 0, 1, 1)
        self.class_scissors_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_scissors_checkBox.sizePolicy().hasHeightForWidth())
        self.class_scissors_checkBox.setSizePolicy(sizePolicy)
        self.class_scissors_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_scissors_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_scissors_checkBox.setFont(font)
        self.class_scissors_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_scissors_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_scissors_checkBox.setObjectName("class_scissors_checkBox")
        self.gridLayout_25.addWidget(self.class_scissors_checkBox, 74, 1, 1, 1)
        self.class_truck_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_truck_checkBox.sizePolicy().hasHeightForWidth())
        self.class_truck_checkBox.setSizePolicy(sizePolicy)
        self.class_truck_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_truck_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_truck_checkBox.setFont(font)
        self.class_truck_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_truck_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_truck_checkBox.setObjectName("class_truck_checkBox")
        self.gridLayout_25.addWidget(self.class_truck_checkBox, 12, 1, 1, 1)
        self.class_hair_drier_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_hair_drier_checkBox.sizePolicy().hasHeightForWidth())
        self.class_hair_drier_checkBox.setSizePolicy(sizePolicy)
        self.class_hair_drier_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_hair_drier_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_hair_drier_checkBox.setFont(font)
        self.class_hair_drier_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_hair_drier_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_hair_drier_checkBox.setObjectName("class_hair_drier_checkBox")
        self.gridLayout_25.addWidget(self.class_hair_drier_checkBox, 76, 1, 1, 1)
        self.class_dining_table_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_dining_table_checkBox.sizePolicy().hasHeightForWidth())
        self.class_dining_table_checkBox.setSizePolicy(sizePolicy)
        self.class_dining_table_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_dining_table_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_dining_table_checkBox.setFont(font)
        self.class_dining_table_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_dining_table_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_dining_table_checkBox.setObjectName("class_dining_table_checkBox")
        self.gridLayout_25.addWidget(self.class_dining_table_checkBox, 58, 1, 1, 1)
        self.class_woman_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_woman_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_woman_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_woman_checkBox.setFont(font)
        self.class_woman_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_woman_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_woman_checkBox.setObjectName("class_woman_checkBox")
        self.gridLayout_25.addWidget(self.class_woman_checkBox, 3, 1, 1, 1)
        self.class_laptop_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_laptop_checkBox.sizePolicy().hasHeightForWidth())
        self.class_laptop_checkBox.setSizePolicy(sizePolicy)
        self.class_laptop_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_laptop_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_laptop_checkBox.setFont(font)
        self.class_laptop_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_laptop_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_laptop_checkBox.setObjectName("class_laptop_checkBox")
        self.gridLayout_25.addWidget(self.class_laptop_checkBox, 61, 1, 1, 1)
        self.class_no_safety_vest_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_no_safety_vest_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_no_safety_vest_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_no_safety_vest_checkBox.setFont(font)
        self.class_no_safety_vest_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_no_safety_vest_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_no_safety_vest_checkBox.setObjectName("class_no_safety_vest_checkBox")
        self.gridLayout_25.addWidget(self.class_no_safety_vest_checkBox, 6, 1, 1, 1)
        self.class_potted_plant_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_potted_plant_checkBox.sizePolicy().hasHeightForWidth())
        self.class_potted_plant_checkBox.setSizePolicy(sizePolicy)
        self.class_potted_plant_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_potted_plant_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_potted_plant_checkBox.setFont(font)
        self.class_potted_plant_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_potted_plant_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_potted_plant_checkBox.setObjectName("class_potted_plant_checkBox")
        self.gridLayout_25.addWidget(self.class_potted_plant_checkBox, 56, 1, 1, 1)
        self.class_airplane_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_airplane_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_airplane_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_airplane_checkBox.setFont(font)
        self.class_airplane_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_airplane_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_airplane_checkBox.setObjectName("class_airplane_checkBox")
        self.gridLayout_25.addWidget(self.class_airplane_checkBox, 15, 1, 1, 1)
        self.class_giraffe_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_giraffe_checkBox.sizePolicy().hasHeightForWidth())
        self.class_giraffe_checkBox.setSizePolicy(sizePolicy)
        self.class_giraffe_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_giraffe_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_giraffe_checkBox.setFont(font)
        self.class_giraffe_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_giraffe_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_giraffe_checkBox.setObjectName("class_giraffe_checkBox")
        self.gridLayout_25.addWidget(self.class_giraffe_checkBox, 32, 1, 1, 1)
        self.class_donut_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_donut_checkBox.sizePolicy().hasHeightForWidth())
        self.class_donut_checkBox.setSizePolicy(sizePolicy)
        self.class_donut_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_donut_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_donut_checkBox.setFont(font)
        self.class_donut_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_donut_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_donut_checkBox.setObjectName("class_donut_checkBox")
        self.gridLayout_25.addWidget(self.class_donut_checkBox, 52, 1, 1, 1)
        self.class_wine_glass_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_wine_glass_checkBox.sizePolicy().hasHeightForWidth())
        self.class_wine_glass_checkBox.setSizePolicy(sizePolicy)
        self.class_wine_glass_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_wine_glass_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_wine_glass_checkBox.setFont(font)
        self.class_wine_glass_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_wine_glass_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_wine_glass_checkBox.setObjectName("class_wine_glass_checkBox")
        self.gridLayout_25.addWidget(self.class_wine_glass_checkBox, 38, 1, 1, 1)
        self.class_bowl_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_bowl_checkBox.sizePolicy().hasHeightForWidth())
        self.class_bowl_checkBox.setSizePolicy(sizePolicy)
        self.class_bowl_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_bowl_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_bowl_checkBox.setFont(font)
        self.class_bowl_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_bowl_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_bowl_checkBox.setObjectName("class_bowl_checkBox")
        self.gridLayout_25.addWidget(self.class_bowl_checkBox, 43, 1, 1, 1)
        self.class_parking_meter_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_parking_meter_checkBox.sizePolicy().hasHeightForWidth())
        self.class_parking_meter_checkBox.setSizePolicy(sizePolicy)
        self.class_parking_meter_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_parking_meter_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_parking_meter_checkBox.setFont(font)
        self.class_parking_meter_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_parking_meter_checkBox.setObjectName("class_parking_meter_checkBox")
        self.gridLayout_25.addWidget(self.class_parking_meter_checkBox, 21, 1, 1, 1)
        self.class_toothbrush_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_toothbrush_checkBox.sizePolicy().hasHeightForWidth())
        self.class_toothbrush_checkBox.setSizePolicy(sizePolicy)
        self.class_toothbrush_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_toothbrush_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_toothbrush_checkBox.setFont(font)
        self.class_toothbrush_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_toothbrush_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_toothbrush_checkBox.setObjectName("class_toothbrush_checkBox")
        self.gridLayout_25.addWidget(self.class_toothbrush_checkBox, 77, 1, 1, 1)
        self.class_oven_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_oven_checkBox.sizePolicy().hasHeightForWidth())
        self.class_oven_checkBox.setSizePolicy(sizePolicy)
        self.class_oven_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_oven_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_oven_checkBox.setFont(font)
        self.class_oven_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_oven_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_oven_checkBox.setObjectName("class_oven_checkBox")
        self.gridLayout_25.addWidget(self.class_oven_checkBox, 67, 1, 1, 1)
        self.class_other_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_other_checkBox.setMinimumSize(QtCore.QSize(0, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_other_checkBox.setFont(font)
        self.class_other_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_other_checkBox.setObjectName("class_other_checkBox")
        self.gridLayout_25.addWidget(self.class_other_checkBox, 17, 0, 1, 2)
        self.class_mouse_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_mouse_checkBox.sizePolicy().hasHeightForWidth())
        self.class_mouse_checkBox.setSizePolicy(sizePolicy)
        self.class_mouse_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_mouse_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_mouse_checkBox.setFont(font)
        self.class_mouse_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_mouse_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_mouse_checkBox.setObjectName("class_mouse_checkBox")
        self.gridLayout_25.addWidget(self.class_mouse_checkBox, 62, 1, 1, 1)
        self.class_stop_sign_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_stop_sign_checkBox.sizePolicy().hasHeightForWidth())
        self.class_stop_sign_checkBox.setSizePolicy(sizePolicy)
        self.class_stop_sign_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_stop_sign_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_stop_sign_checkBox.setFont(font)
        self.class_stop_sign_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_stop_sign_checkBox.setObjectName("class_stop_sign_checkBox")
        self.gridLayout_25.addWidget(self.class_stop_sign_checkBox, 20, 1, 1, 1)
        self.class_child_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_child_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_child_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_child_checkBox.setFont(font)
        self.class_child_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_child_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_child_checkBox.setObjectName("class_child_checkBox")
        self.gridLayout_25.addWidget(self.class_child_checkBox, 4, 1, 1, 1)
        self.class_backpack_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_backpack_checkBox.sizePolicy().hasHeightForWidth())
        self.class_backpack_checkBox.setSizePolicy(sizePolicy)
        self.class_backpack_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_backpack_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_backpack_checkBox.setFont(font)
        self.class_backpack_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_backpack_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_backpack_checkBox.setObjectName("class_backpack_checkBox")
        self.gridLayout_25.addWidget(self.class_backpack_checkBox, 33, 1, 1, 1)
        self.class_cat_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_cat_checkBox.sizePolicy().hasHeightForWidth())
        self.class_cat_checkBox.setSizePolicy(sizePolicy)
        self.class_cat_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_cat_checkBox.setFont(font)
        self.class_cat_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_cat_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_cat_checkBox.setObjectName("class_cat_checkBox")
        self.gridLayout_25.addWidget(self.class_cat_checkBox, 24, 1, 1, 1)
        self.class_sheep_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_sheep_checkBox.sizePolicy().hasHeightForWidth())
        self.class_sheep_checkBox.setSizePolicy(sizePolicy)
        self.class_sheep_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_sheep_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_sheep_checkBox.setFont(font)
        self.class_sheep_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_sheep_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_sheep_checkBox.setObjectName("class_sheep_checkBox")
        self.gridLayout_25.addWidget(self.class_sheep_checkBox, 27, 1, 1, 1)
        self.class_vehicle_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_vehicle_checkBox.setMinimumSize(QtCore.QSize(0, 50))
        self.class_vehicle_checkBox.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_vehicle_checkBox.setFont(font)
        self.class_vehicle_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_vehicle_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_vehicle_checkBox.setObjectName("class_vehicle_checkBox")
        self.gridLayout_25.addWidget(self.class_vehicle_checkBox, 7, 0, 1, 2)
        self.class_train_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_train_checkBox.sizePolicy().hasHeightForWidth())
        self.class_train_checkBox.setSizePolicy(sizePolicy)
        self.class_train_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_train_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_train_checkBox.setFont(font)
        self.class_train_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_train_checkBox.setObjectName("class_train_checkBox")
        self.gridLayout_25.addWidget(self.class_train_checkBox, 14, 1, 1, 1)
        self.class_refrigerator_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_refrigerator_checkBox.sizePolicy().hasHeightForWidth())
        self.class_refrigerator_checkBox.setSizePolicy(sizePolicy)
        self.class_refrigerator_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_refrigerator_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_refrigerator_checkBox.setFont(font)
        self.class_refrigerator_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_refrigerator_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_refrigerator_checkBox.setObjectName("class_refrigerator_checkBox")
        self.gridLayout_25.addWidget(self.class_refrigerator_checkBox, 70, 1, 1, 1)
        self.class_umbrella_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_umbrella_checkBox.sizePolicy().hasHeightForWidth())
        self.class_umbrella_checkBox.setSizePolicy(sizePolicy)
        self.class_umbrella_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_umbrella_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_umbrella_checkBox.setFont(font)
        self.class_umbrella_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_umbrella_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_umbrella_checkBox.setObjectName("class_umbrella_checkBox")
        self.gridLayout_25.addWidget(self.class_umbrella_checkBox, 34, 1, 1, 1)
        self.class_book_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_book_checkBox.sizePolicy().hasHeightForWidth())
        self.class_book_checkBox.setSizePolicy(sizePolicy)
        self.class_book_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_book_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_book_checkBox.setFont(font)
        self.class_book_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_book_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_book_checkBox.setObjectName("class_book_checkBox")
        self.gridLayout_25.addWidget(self.class_book_checkBox, 71, 1, 1, 1)
        self.class_boat_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_boat_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_boat_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_boat_checkBox.setFont(font)
        self.class_boat_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_boat_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_boat_checkBox.setObjectName("class_boat_checkBox")
        self.gridLayout_25.addWidget(self.class_boat_checkBox, 16, 1, 1, 1)
        self.class_fork_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_fork_checkBox.sizePolicy().hasHeightForWidth())
        self.class_fork_checkBox.setSizePolicy(sizePolicy)
        self.class_fork_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_fork_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_fork_checkBox.setFont(font)
        self.class_fork_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_fork_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_fork_checkBox.setObjectName("class_fork_checkBox")
        self.gridLayout_25.addWidget(self.class_fork_checkBox, 40, 1, 1, 1)
        self.class_traffic_light_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_traffic_light_checkBox.sizePolicy().hasHeightForWidth())
        self.class_traffic_light_checkBox.setSizePolicy(sizePolicy)
        self.class_traffic_light_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_traffic_light_checkBox.setFont(font)
        self.class_traffic_light_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_traffic_light_checkBox.setObjectName("class_traffic_light_checkBox")
        self.gridLayout_25.addWidget(self.class_traffic_light_checkBox, 18, 1, 1, 1)
        self.class_cup_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_cup_checkBox.sizePolicy().hasHeightForWidth())
        self.class_cup_checkBox.setSizePolicy(sizePolicy)
        self.class_cup_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_cup_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_cup_checkBox.setFont(font)
        self.class_cup_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_cup_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_cup_checkBox.setObjectName("class_cup_checkBox")
        self.gridLayout_25.addWidget(self.class_cup_checkBox, 39, 1, 1, 1)
        self.class_cake_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_cake_checkBox.sizePolicy().hasHeightForWidth())
        self.class_cake_checkBox.setSizePolicy(sizePolicy)
        self.class_cake_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_cake_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_cake_checkBox.setFont(font)
        self.class_cake_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_cake_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_cake_checkBox.setObjectName("class_cake_checkBox")
        self.gridLayout_25.addWidget(self.class_cake_checkBox, 53, 1, 1, 1)
        self.class_zebra_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_zebra_checkBox.sizePolicy().hasHeightForWidth())
        self.class_zebra_checkBox.setSizePolicy(sizePolicy)
        self.class_zebra_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_zebra_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_zebra_checkBox.setFont(font)
        self.class_zebra_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_zebra_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_zebra_checkBox.setObjectName("class_zebra_checkBox")
        self.gridLayout_25.addWidget(self.class_zebra_checkBox, 31, 1, 1, 1)
        self.class_bear_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_bear_checkBox.sizePolicy().hasHeightForWidth())
        self.class_bear_checkBox.setSizePolicy(sizePolicy)
        self.class_bear_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_bear_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_bear_checkBox.setFont(font)
        self.class_bear_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_bear_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_bear_checkBox.setObjectName("class_bear_checkBox")
        self.gridLayout_25.addWidget(self.class_bear_checkBox, 30, 1, 1, 1)
        self.class_car_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_car_checkBox.sizePolicy().hasHeightForWidth())
        self.class_car_checkBox.setSizePolicy(sizePolicy)
        self.class_car_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_car_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_car_checkBox.setFont(font)
        self.class_car_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_car_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_car_checkBox.setObjectName("class_car_checkBox")
        self.gridLayout_25.addWidget(self.class_car_checkBox, 11, 1, 1, 1)
        self.class_fire_hydrant_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_fire_hydrant_checkBox.sizePolicy().hasHeightForWidth())
        self.class_fire_hydrant_checkBox.setSizePolicy(sizePolicy)
        self.class_fire_hydrant_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_fire_hydrant_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_fire_hydrant_checkBox.setFont(font)
        self.class_fire_hydrant_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_fire_hydrant_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_fire_hydrant_checkBox.setObjectName("class_fire_hydrant_checkBox")
        self.gridLayout_25.addWidget(self.class_fire_hydrant_checkBox, 19, 1, 1, 1)
        self.class_cow_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_cow_checkBox.sizePolicy().hasHeightForWidth())
        self.class_cow_checkBox.setSizePolicy(sizePolicy)
        self.class_cow_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_cow_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_cow_checkBox.setFont(font)
        self.class_cow_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_cow_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_cow_checkBox.setObjectName("class_cow_checkBox")
        self.gridLayout_25.addWidget(self.class_cow_checkBox, 28, 1, 1, 1)
        self.class_teddy_bear_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_teddy_bear_checkBox.sizePolicy().hasHeightForWidth())
        self.class_teddy_bear_checkBox.setSizePolicy(sizePolicy)
        self.class_teddy_bear_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_teddy_bear_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_teddy_bear_checkBox.setFont(font)
        self.class_teddy_bear_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_teddy_bear_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_teddy_bear_checkBox.setObjectName("class_teddy_bear_checkBox")
        self.gridLayout_25.addWidget(self.class_teddy_bear_checkBox, 75, 1, 1, 1)
        self.class_handbag_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_handbag_checkBox.sizePolicy().hasHeightForWidth())
        self.class_handbag_checkBox.setSizePolicy(sizePolicy)
        self.class_handbag_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_handbag_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_handbag_checkBox.setFont(font)
        self.class_handbag_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_handbag_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_handbag_checkBox.setObjectName("class_handbag_checkBox")
        self.gridLayout_25.addWidget(self.class_handbag_checkBox, 35, 1, 1, 1)
        self.class_broccoli_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_broccoli_checkBox.sizePolicy().hasHeightForWidth())
        self.class_broccoli_checkBox.setSizePolicy(sizePolicy)
        self.class_broccoli_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_broccoli_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_broccoli_checkBox.setFont(font)
        self.class_broccoli_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_broccoli_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_broccoli_checkBox.setObjectName("class_broccoli_checkBox")
        self.gridLayout_25.addWidget(self.class_broccoli_checkBox, 48, 1, 1, 1)
        self.class_keyboard_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_keyboard_checkBox.sizePolicy().hasHeightForWidth())
        self.class_keyboard_checkBox.setSizePolicy(sizePolicy)
        self.class_keyboard_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_keyboard_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_keyboard_checkBox.setFont(font)
        self.class_keyboard_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_keyboard_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_keyboard_checkBox.setObjectName("class_keyboard_checkBox")
        self.gridLayout_25.addWidget(self.class_keyboard_checkBox, 64, 1, 1, 1)
        self.class_people_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_people_checkBox.sizePolicy().hasHeightForWidth())
        self.class_people_checkBox.setSizePolicy(sizePolicy)
        self.class_people_checkBox.setMinimumSize(QtCore.QSize(0, 50))
        self.class_people_checkBox.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_people_checkBox.setFont(font)
        self.class_people_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_people_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_people_checkBox.setObjectName("class_people_checkBox")
        self.gridLayout_25.addWidget(self.class_people_checkBox, 1, 0, 1, 2)
        self.class_birird_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_birird_checkBox.sizePolicy().hasHeightForWidth())
        self.class_birird_checkBox.setSizePolicy(sizePolicy)
        self.class_birird_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_birird_checkBox.setFont(font)
        self.class_birird_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_birird_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_birird_checkBox.setObjectName("class_birird_checkBox")
        self.gridLayout_25.addWidget(self.class_birird_checkBox, 23, 1, 1, 1)
        self.class_knife_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_knife_checkBox.sizePolicy().hasHeightForWidth())
        self.class_knife_checkBox.setSizePolicy(sizePolicy)
        self.class_knife_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_knife_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_knife_checkBox.setFont(font)
        self.class_knife_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_knife_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_knife_checkBox.setObjectName("class_knife_checkBox")
        self.gridLayout_25.addWidget(self.class_knife_checkBox, 41, 1, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.scrollAreaWidgetContents_25)
        self.label_11.setMinimumSize(QtCore.QSize(0, 50))
        self.label_11.setText("")
        self.label_11.setObjectName("label_11")
        self.gridLayout_25.addWidget(self.label_11, 78, 1, 1, 1)
        self.class_man_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_man_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_man_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_man_checkBox.setFont(font)
        self.class_man_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_man_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_man_checkBox.setObjectName("class_man_checkBox")
        self.gridLayout_25.addWidget(self.class_man_checkBox, 2, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.scrollAreaWidgetContents_25)
        self.label.setMaximumSize(QtCore.QSize(16777215, 50))
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.gridLayout_25.addWidget(self.label, 0, 0, 1, 2)
        self.class_spoon_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_spoon_checkBox.sizePolicy().hasHeightForWidth())
        self.class_spoon_checkBox.setSizePolicy(sizePolicy)
        self.class_spoon_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_spoon_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_spoon_checkBox.setFont(font)
        self.class_spoon_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_spoon_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_spoon_checkBox.setObjectName("class_spoon_checkBox")
        self.gridLayout_25.addWidget(self.class_spoon_checkBox, 42, 1, 1, 1)
        self.class_sink_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_sink_checkBox.sizePolicy().hasHeightForWidth())
        self.class_sink_checkBox.setSizePolicy(sizePolicy)
        self.class_sink_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_sink_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_sink_checkBox.setFont(font)
        self.class_sink_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_sink_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_sink_checkBox.setObjectName("class_sink_checkBox")
        self.gridLayout_25.addWidget(self.class_sink_checkBox, 69, 1, 1, 1)
        self.class_toilet_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_toilet_checkBox.sizePolicy().hasHeightForWidth())
        self.class_toilet_checkBox.setSizePolicy(sizePolicy)
        self.class_toilet_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_toilet_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_toilet_checkBox.setFont(font)
        self.class_toilet_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_toilet_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_toilet_checkBox.setObjectName("class_toilet_checkBox")
        self.gridLayout_25.addWidget(self.class_toilet_checkBox, 59, 1, 1, 1)
        self.class_motorcycle_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_motorcycle_checkBox.sizePolicy().hasHeightForWidth())
        self.class_motorcycle_checkBox.setSizePolicy(sizePolicy)
        self.class_motorcycle_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_motorcycle_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_motorcycle_checkBox.setFont(font)
        self.class_motorcycle_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_motorcycle_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_motorcycle_checkBox.setObjectName("class_motorcycle_checkBox")
        self.gridLayout_25.addWidget(self.class_motorcycle_checkBox, 9, 1, 1, 1)
        self.class_van_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_van_checkBox.sizePolicy().hasHeightForWidth())
        self.class_van_checkBox.setSizePolicy(sizePolicy)
        self.class_van_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_van_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_van_checkBox.setFont(font)
        self.class_van_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_van_checkBox.setObjectName("class_van_checkBox")
        self.gridLayout_25.addWidget(self.class_van_checkBox, 13, 1, 1, 1)
        self.class_toaster_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_toaster_checkBox.sizePolicy().hasHeightForWidth())
        self.class_toaster_checkBox.setSizePolicy(sizePolicy)
        self.class_toaster_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_toaster_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_toaster_checkBox.setFont(font)
        self.class_toaster_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_toaster_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_toaster_checkBox.setObjectName("class_toaster_checkBox")
        self.gridLayout_25.addWidget(self.class_toaster_checkBox, 68, 1, 1, 1)
        self.class_apple_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_apple_checkBox.sizePolicy().hasHeightForWidth())
        self.class_apple_checkBox.setSizePolicy(sizePolicy)
        self.class_apple_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_apple_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_apple_checkBox.setFont(font)
        self.class_apple_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_apple_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_apple_checkBox.setObjectName("class_apple_checkBox")
        self.gridLayout_25.addWidget(self.class_apple_checkBox, 45, 1, 1, 1)
        self.class_chair_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_chair_checkBox.sizePolicy().hasHeightForWidth())
        self.class_chair_checkBox.setSizePolicy(sizePolicy)
        self.class_chair_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_chair_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_chair_checkBox.setFont(font)
        self.class_chair_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_chair_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_chair_checkBox.setObjectName("class_chair_checkBox")
        self.gridLayout_25.addWidget(self.class_chair_checkBox, 54, 1, 1, 1)
        self.class_tv_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_tv_checkBox.sizePolicy().hasHeightForWidth())
        self.class_tv_checkBox.setSizePolicy(sizePolicy)
        self.class_tv_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_tv_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_tv_checkBox.setFont(font)
        self.class_tv_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_tv_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_tv_checkBox.setObjectName("class_tv_checkBox")
        self.gridLayout_25.addWidget(self.class_tv_checkBox, 60, 1, 1, 1)
        self.class_sandwich_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_sandwich_checkBox.sizePolicy().hasHeightForWidth())
        self.class_sandwich_checkBox.setSizePolicy(sizePolicy)
        self.class_sandwich_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_sandwich_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_sandwich_checkBox.setFont(font)
        self.class_sandwich_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_sandwich_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_sandwich_checkBox.setObjectName("class_sandwich_checkBox")
        self.gridLayout_25.addWidget(self.class_sandwich_checkBox, 46, 1, 1, 1)
        self.class_vehicle_other_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_vehicle_other_checkBox.sizePolicy().hasHeightForWidth())
        self.class_vehicle_other_checkBox.setSizePolicy(sizePolicy)
        self.class_vehicle_other_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_vehicle_other_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_vehicle_other_checkBox.setFont(font)
        self.class_vehicle_other_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_vehicle_other_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_vehicle_other_checkBox.setObjectName("class_vehicle_other_checkBox")
        self.gridLayout_25.addWidget(self.class_vehicle_other_checkBox, 10, 0, 1, 2)
        self.class_cell_phone_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_cell_phone_checkBox.sizePolicy().hasHeightForWidth())
        self.class_cell_phone_checkBox.setSizePolicy(sizePolicy)
        self.class_cell_phone_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_cell_phone_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_cell_phone_checkBox.setFont(font)
        self.class_cell_phone_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_cell_phone_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_cell_phone_checkBox.setObjectName("class_cell_phone_checkBox")
        self.gridLayout_25.addWidget(self.class_cell_phone_checkBox, 65, 1, 1, 1)
        self.class_orange_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_orange_checkBox.sizePolicy().hasHeightForWidth())
        self.class_orange_checkBox.setSizePolicy(sizePolicy)
        self.class_orange_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_orange_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_orange_checkBox.setFont(font)
        self.class_orange_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_orange_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_orange_checkBox.setObjectName("class_orange_checkBox")
        self.gridLayout_25.addWidget(self.class_orange_checkBox, 47, 1, 1, 1)
        self.class_pizza_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_pizza_checkBox.sizePolicy().hasHeightForWidth())
        self.class_pizza_checkBox.setSizePolicy(sizePolicy)
        self.class_pizza_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_pizza_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_pizza_checkBox.setFont(font)
        self.class_pizza_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_pizza_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_pizza_checkBox.setObjectName("class_pizza_checkBox")
        self.gridLayout_25.addWidget(self.class_pizza_checkBox, 51, 1, 1, 1)
        self.class_carrot_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_carrot_checkBox.sizePolicy().hasHeightForWidth())
        self.class_carrot_checkBox.setSizePolicy(sizePolicy)
        self.class_carrot_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_carrot_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_carrot_checkBox.setFont(font)
        self.class_carrot_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_carrot_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_carrot_checkBox.setObjectName("class_carrot_checkBox")
        self.gridLayout_25.addWidget(self.class_carrot_checkBox, 49, 1, 1, 1)
        self.class_clock_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_clock_checkBox.sizePolicy().hasHeightForWidth())
        self.class_clock_checkBox.setSizePolicy(sizePolicy)
        self.class_clock_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_clock_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_clock_checkBox.setFont(font)
        self.class_clock_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_clock_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_clock_checkBox.setObjectName("class_clock_checkBox")
        self.gridLayout_25.addWidget(self.class_clock_checkBox, 72, 1, 1, 1)
        self.class_remote_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_remote_checkBox.sizePolicy().hasHeightForWidth())
        self.class_remote_checkBox.setSizePolicy(sizePolicy)
        self.class_remote_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_remote_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_remote_checkBox.setFont(font)
        self.class_remote_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_remote_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_remote_checkBox.setObjectName("class_remote_checkBox")
        self.gridLayout_25.addWidget(self.class_remote_checkBox, 63, 1, 1, 1)
        self.class_dog_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_dog_checkBox.sizePolicy().hasHeightForWidth())
        self.class_dog_checkBox.setSizePolicy(sizePolicy)
        self.class_dog_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_dog_checkBox.setFont(font)
        self.class_dog_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_dog_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_dog_checkBox.setObjectName("class_dog_checkBox")
        self.gridLayout_25.addWidget(self.class_dog_checkBox, 25, 1, 1, 1)
        self.class_safety_vest_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        self.class_safety_vest_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_safety_vest_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_safety_vest_checkBox.setFont(font)
        self.class_safety_vest_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_safety_vest_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_safety_vest_checkBox.setObjectName("class_safety_vest_checkBox")
        self.gridLayout_25.addWidget(self.class_safety_vest_checkBox, 5, 1, 1, 1)
        self.class_vase_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_vase_checkBox.sizePolicy().hasHeightForWidth())
        self.class_vase_checkBox.setSizePolicy(sizePolicy)
        self.class_vase_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_vase_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_vase_checkBox.setFont(font)
        self.class_vase_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_vase_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_vase_checkBox.setObjectName("class_vase_checkBox")
        self.gridLayout_25.addWidget(self.class_vase_checkBox, 73, 1, 1, 1)
        self.class_bicycle_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_bicycle_checkBox.sizePolicy().hasHeightForWidth())
        self.class_bicycle_checkBox.setSizePolicy(sizePolicy)
        self.class_bicycle_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_bicycle_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_bicycle_checkBox.setFont(font)
        self.class_bicycle_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_bicycle_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_bicycle_checkBox.setObjectName("class_bicycle_checkBox")
        self.gridLayout_25.addWidget(self.class_bicycle_checkBox, 8, 1, 1, 1)
        self.class_horse_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_horse_checkBox.sizePolicy().hasHeightForWidth())
        self.class_horse_checkBox.setSizePolicy(sizePolicy)
        self.class_horse_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_horse_checkBox.setFont(font)
        self.class_horse_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_horse_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_horse_checkBox.setObjectName("class_horse_checkBox")
        self.gridLayout_25.addWidget(self.class_horse_checkBox, 26, 1, 1, 1)
        self.class_bed_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_bed_checkBox.sizePolicy().hasHeightForWidth())
        self.class_bed_checkBox.setSizePolicy(sizePolicy)
        self.class_bed_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_bed_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_bed_checkBox.setFont(font)
        self.class_bed_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_bed_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_bed_checkBox.setObjectName("class_bed_checkBox")
        self.gridLayout_25.addWidget(self.class_bed_checkBox, 57, 1, 1, 1)
        self.class_hot_dog_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_hot_dog_checkBox.sizePolicy().hasHeightForWidth())
        self.class_hot_dog_checkBox.setSizePolicy(sizePolicy)
        self.class_hot_dog_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_hot_dog_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_hot_dog_checkBox.setFont(font)
        self.class_hot_dog_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_hot_dog_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_hot_dog_checkBox.setObjectName("class_hot_dog_checkBox")
        self.gridLayout_25.addWidget(self.class_hot_dog_checkBox, 50, 1, 1, 1)
        self.class_elephant_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_elephant_checkBox.sizePolicy().hasHeightForWidth())
        self.class_elephant_checkBox.setSizePolicy(sizePolicy)
        self.class_elephant_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_elephant_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_elephant_checkBox.setFont(font)
        self.class_elephant_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_elephant_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_elephant_checkBox.setObjectName("class_elephant_checkBox")
        self.gridLayout_25.addWidget(self.class_elephant_checkBox, 29, 1, 1, 1)
        self.class_couch_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_couch_checkBox.sizePolicy().hasHeightForWidth())
        self.class_couch_checkBox.setSizePolicy(sizePolicy)
        self.class_couch_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_couch_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_couch_checkBox.setFont(font)
        self.class_couch_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_couch_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_couch_checkBox.setObjectName("class_couch_checkBox")
        self.gridLayout_25.addWidget(self.class_couch_checkBox, 55, 1, 1, 1)
        self.class_bottle_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_25)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.class_bottle_checkBox.sizePolicy().hasHeightForWidth())
        self.class_bottle_checkBox.setSizePolicy(sizePolicy)
        self.class_bottle_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.class_bottle_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.class_bottle_checkBox.setFont(font)
        self.class_bottle_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.class_bottle_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 0px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.class_bottle_checkBox.setObjectName("class_bottle_checkBox")
        self.gridLayout_25.addWidget(self.class_bottle_checkBox, 37, 1, 1, 1)
        self.class_fitter_scrollArea.setWidget(self.scrollAreaWidgetContents_25)
        self.frame = QtWidgets.QFrame(self.splitter_2)
        self.frame.setMinimumSize(QtCore.QSize(0, 50))
        self.frame.setMaximumSize(QtCore.QSize(200, 150))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.page_person_tolerance_low_checkBox_2 = QtWidgets.QCheckBox(self.frame)
        self.page_person_tolerance_low_checkBox_2.setMinimumSize(QtCore.QSize(65, 20))
        self.page_person_tolerance_low_checkBox_2.setMaximumSize(QtCore.QSize(65, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_tolerance_low_checkBox_2.setFont(font)
        self.page_person_tolerance_low_checkBox_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_tolerance_low_checkBox_2.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_tolerance_low_checkBox_2.setObjectName("page_person_tolerance_low_checkBox_2")
        self.gridLayout_27.addWidget(self.page_person_tolerance_low_checkBox_2, 1, 0, 1, 1)
        self.page_person_tolerance_high_checkBox_2 = QtWidgets.QCheckBox(self.frame)
        self.page_person_tolerance_high_checkBox_2.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_tolerance_high_checkBox_2.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_tolerance_high_checkBox_2.setFont(font)
        self.page_person_tolerance_high_checkBox_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_tolerance_high_checkBox_2.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_tolerance_high_checkBox_2.setObjectName("page_person_tolerance_high_checkBox_2")
        self.gridLayout_27.addWidget(self.page_person_tolerance_high_checkBox_2, 1, 2, 1, 1)
        self.page_person_tolerance_medium_checkBox_2 = QtWidgets.QCheckBox(self.frame)
        self.page_person_tolerance_medium_checkBox_2.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_tolerance_medium_checkBox_2.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_tolerance_medium_checkBox_2.setFont(font)
        self.page_person_tolerance_medium_checkBox_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_tolerance_medium_checkBox_2.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_tolerance_medium_checkBox_2.setObjectName("page_person_tolerance_medium_checkBox_2")
        self.gridLayout_27.addWidget(self.page_person_tolerance_medium_checkBox_2, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.gridLayout_27.addWidget(self.label_2, 0, 0, 1, 3)
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.class_reset_Button = QtWidgets.QPushButton(self.frame_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.class_reset_Button.setFont(font)
        self.class_reset_Button.setStyleSheet("QPushButton {\n"
"    background-color: #2e3136; /* Màu nền cơ bản */\n"
"    color: #ffffff; /* Màu chữ */\n"
"    border: 1px solid #1f2225; /* Viền nút */\n"
"    border-radius: 5px; /* Độ cong viền nút */\n"
"    padding: 5px 10px; /* Khoảng cách giữa nội dung và viền nút */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #232527; /* Màu nền khi di chuột qua */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #1a1c1d; /* Màu nền khi nút được nhấn */\n"
"    border: 1px solid #131415; /* Viền khi nút được nhấn */\n"
"}\n"
"")
        self.class_reset_Button.setObjectName("class_reset_Button")
        self.horizontalLayout_5.addWidget(self.class_reset_Button)
        self.class_apply_Button = QtWidgets.QPushButton(self.frame_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.class_apply_Button.setFont(font)
        self.class_apply_Button.setStyleSheet("QPushButton {\n"
"    background-color: #2e3136; /* Màu nền cơ bản */\n"
"    color: #ffffff; /* Màu chữ */\n"
"    border: 1px solid #1f2225; /* Viền nút */\n"
"    border-radius: 5px; /* Độ cong viền nút */\n"
"    padding: 5px 10px; /* Khoảng cách giữa nội dung và viền nút */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #232527; /* Màu nền khi di chuột qua */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #1a1c1d; /* Màu nền khi nút được nhấn */\n"
"    border: 1px solid #131415; /* Viền khi nút được nhấn */\n"
"}\n"
"")
        self.class_apply_Button.setObjectName("class_apply_Button")
        self.horizontalLayout_5.addWidget(self.class_apply_Button)
        self.horizontalLayout_6.addLayout(self.horizontalLayout_5)
        self.gridLayout_27.addWidget(self.frame_2, 4, 0, 1, 3)
        self.line = QtWidgets.QFrame(self.frame)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_27.addWidget(self.line, 3, 0, 1, 3)
        self.layoutWidget1 = QtWidgets.QWidget(self.splitter_3)
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.class_search_widget = QtWidgets.QWidget(self.layoutWidget1)
        self.class_search_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.class_search_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.class_search_widget.setObjectName("class_search_widget")
        self.gridLayout_62 = QtWidgets.QGridLayout(self.class_search_widget)
        self.gridLayout_62.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_62.setSpacing(0)
        self.gridLayout_62.setObjectName("gridLayout_62")
        self.class_Button_fitter = QtWidgets.QPushButton(self.class_search_widget)
        self.class_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.class_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.class_Button_fitter.setText("")
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/newPrefix/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon23.addPixmap(QtGui.QPixmap(":/newPrefix/folder1.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.class_Button_fitter.setIcon(icon23)
        self.class_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.class_Button_fitter.setCheckable(True)
        self.class_Button_fitter.setObjectName("class_Button_fitter")
        self.gridLayout_62.addWidget(self.class_Button_fitter, 0, 0, 1, 1)
        self.class_time_label = QtWidgets.QLabel(self.class_search_widget)
        self.class_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.class_time_label.setFont(font)
        self.class_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.class_time_label.setObjectName("class_time_label")
        self.gridLayout_62.addWidget(self.class_time_label, 0, 2, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_62.addItem(spacerItem8, 0, 3, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_62.addItem(spacerItem9, 0, 1, 1, 1)
        self.class_text_fitter_label = QtWidgets.QLabel(self.class_search_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.class_text_fitter_label.setFont(font)
        self.class_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.class_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.class_text_fitter_label.setScaledContents(True)
        self.class_text_fitter_label.setWordWrap(True)
        self.class_text_fitter_label.setObjectName("class_text_fitter_label")
        self.gridLayout_62.addWidget(self.class_text_fitter_label, 1, 1, 1, 3)
        self.class_Button = QtWidgets.QPushButton(self.class_search_widget)
        self.class_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.class_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.class_Button.setText("")
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/newPrefix/filter.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon24.addPixmap(QtGui.QPixmap(":/newPrefix/filter1.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.class_Button.setIcon(icon24)
        self.class_Button.setIconSize(QtCore.QSize(15, 15))
        self.class_Button.setCheckable(True)
        self.class_Button.setObjectName("class_Button")
        self.gridLayout_62.addWidget(self.class_Button, 1, 0, 1, 1)
        self.gridLayout.addWidget(self.class_search_widget, 0, 0, 1, 1)
        self.class_scrollArea_show = QtWidgets.QScrollArea(self.layoutWidget1)
        self.class_scrollArea_show.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.class_scrollArea_show.setWidgetResizable(True)
        self.class_scrollArea_show.setObjectName("class_scrollArea_show")
        self.scrollAreaWidgetContents_26 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_26.setGeometry(QtCore.QRect(0, 0, 553, 721))
        self.scrollAreaWidgetContents_26.setObjectName("scrollAreaWidgetContents_26")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_26)
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.frame_3 = QtWidgets.QFrame(self.scrollAreaWidgetContents_26)
        self.frame_3.setStyleSheet("image: url(:/newPrefix/logo2.jpg);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_28.addWidget(self.frame_3, 0, 0, 1, 1)
        self.class_scrollArea_show.setWidget(self.scrollAreaWidgetContents_26)
        self.gridLayout.addWidget(self.class_scrollArea_show, 1, 0, 1, 1)
        self.gridLayout_9.addWidget(self.splitter_3, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_class)
        self.page_person_attributes = QtWidgets.QWidget()
        self.page_person_attributes.setObjectName("page_person_attributes")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.page_person_attributes)
        self.gridLayout_11.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_11.setSpacing(6)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.splitter = QtWidgets.QSplitter(self.page_person_attributes)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.scrollArea_18 = QtWidgets.QScrollArea(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_18.sizePolicy().hasHeightForWidth())
        self.scrollArea_18.setSizePolicy(sizePolicy)
        self.scrollArea_18.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_18.setWidgetResizable(True)
        self.scrollArea_18.setObjectName("scrollArea_18")
        self.scrollAreaWidgetContents_24 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_24.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_24.setObjectName("scrollAreaWidgetContents_24")
        self.scrollArea_18.setWidget(self.scrollAreaWidgetContents_24)
        self.scrollArea_17 = QtWidgets.QScrollArea(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_17.sizePolicy().hasHeightForWidth())
        self.scrollArea_17.setSizePolicy(sizePolicy)
        self.scrollArea_17.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_17.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_17.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_17.setWidgetResizable(True)
        self.scrollArea_17.setObjectName("scrollArea_17")
        self.scrollAreaWidgetContents_23 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_23.setGeometry(QtCore.QRect(0, 0, 200, 748))
        self.scrollAreaWidgetContents_23.setObjectName("scrollAreaWidgetContents_23")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_23)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setSpacing(0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.scrollArea = QtWidgets.QScrollArea(self.scrollAreaWidgetContents_23)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 183, 753))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_29.setContentsMargins(9, 0, 9, 9)
        self.gridLayout_29.setSpacing(6)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.page_person_face_mark_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_face_mark_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_face_mark_checkBox.setSizePolicy(sizePolicy)
        self.page_person_face_mark_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.page_person_face_mark_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_face_mark_checkBox.setFont(font)
        self.page_person_face_mark_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_face_mark_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_face_mark_checkBox.setObjectName("page_person_face_mark_checkBox")
        self.gridLayout_29.addWidget(self.page_person_face_mark_checkBox, 45, 0, 1, 2)
        self.label_29 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_29.setMinimumSize(QtCore.QSize(0, 30))
        self.label_29.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_29.setFont(font)
        self.label_29.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_29.setObjectName("label_29")
        self.gridLayout_29.addWidget(self.label_29, 44, 0, 1, 2)
        self.page_person_shot_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.page_person_shot_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.page_person_shot_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_shot_sleeves_checkBox.setFont(font)
        self.page_person_shot_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_shot_sleeves_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_shot_sleeves_checkBox.setObjectName("page_person_shot_sleeves_checkBox")
        self.gridLayout_29.addWidget(self.page_person_shot_sleeves_checkBox, 3, 0, 1, 2)
        self.label_25 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_25.setMinimumSize(QtCore.QSize(0, 30))
        self.label_25.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_25.setFont(font)
        self.label_25.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_25.setObjectName("label_25")
        self.gridLayout_29.addWidget(self.label_25, 4, 0, 1, 2)
        self.gridLayout_33 = QtWidgets.QGridLayout()
        self.gridLayout_33.setContentsMargins(4, -1, -1, -1)
        self.gridLayout_33.setSpacing(9)
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.page_person_berry_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_berry_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_berry_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_berry_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_berry_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_berry_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_berry_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(226, 8, 255);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(226, 8, 255) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(128, 0, 35); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_berry_trouser_checkBox.setText("")
        self.page_person_berry_trouser_checkBox.setObjectName("page_person_berry_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_berry_trouser_checkBox, 1, 2, 1, 1)
        self.page_person_blue_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_blue_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_blue_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_blue_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_blue_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_blue_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_blue_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(0, 80, 240);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(0, 80, 240) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(13, 20, 55); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_blue_trouser_checkBox.setText("")
        self.page_person_blue_trouser_checkBox.setObjectName("page_person_blue_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_blue_trouser_checkBox, 3, 0, 1, 1)
        self.page_person_yellow_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_yellow_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_yellow_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_yellow_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_yellow_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_yellow_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_yellow_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(255, 255, 0);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: rgb(255, 255, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(163, 171, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"")
        self.page_person_yellow_trouser_checkBox.setText("")
        self.page_person_yellow_trouser_checkBox.setObjectName("page_person_yellow_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_yellow_trouser_checkBox, 0, 1, 1, 1)
        self.page_person_white_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_white_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_white_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_white_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_white_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_white_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_white_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: white; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #dfe2e6; /* Màu nền khi hover và checkbox được chọn */\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"")
        self.page_person_white_trouser_checkBox.setText("")
        self.page_person_white_trouser_checkBox.setObjectName("page_person_white_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_white_trouser_checkBox, 0, 0, 1, 1)
        self.page_person_red_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_red_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_red_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_red_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_red_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_red_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_red_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"   background-color: rgb(255, 0, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: rgb(255, 0, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(163, 171, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_red_trouser_checkBox.setText("")
        self.page_person_red_trouser_checkBox.setObjectName("page_person_red_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_red_trouser_checkBox, 1, 0, 1, 1)
        self.page_person_violet_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_violet_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_violet_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_violet_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_violet_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_violet_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_violet_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(71, 36, 107);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(71, 36, 107) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color:rgb(67, 0, 3); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_violet_trouser_checkBox.setText("")
        self.page_person_violet_trouser_checkBox.setObjectName("page_person_violet_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_violet_trouser_checkBox, 2, 1, 1, 1)
        self.page_person_denim_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_denim_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_denim_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_denim_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_denim_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_denim_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_denim_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(85, 85, 127);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(85, 85, 127) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:rgb(13, 20, 55); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_denim_trouser_checkBox.setText("")
        self.page_person_denim_trouser_checkBox.setObjectName("page_person_denim_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_denim_trouser_checkBox, 2, 2, 1, 1)
        self.page_person_purple_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_purple_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_purple_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_purple_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_purple_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_purple_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_purple_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(170, 85, 255);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(170, 85, 255) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color: rgb(255, 0, 127);/* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_purple_trouser_checkBox.setText("")
        self.page_person_purple_trouser_checkBox.setObjectName("page_person_purple_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_purple_trouser_checkBox, 2, 0, 1, 1)
        self.page_person_orange_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_orange_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_orange_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_orange_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_orange_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_orange_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_orange_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(255, 170, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:  rgb(255, 170, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:rgb(102, 47, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_orange_trouser_checkBox.setText("")
        self.page_person_orange_trouser_checkBox.setObjectName("page_person_orange_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_orange_trouser_checkBox, 0, 2, 1, 1)
        self.page_person_irish_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_irish_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_irish_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_irish_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_irish_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_irish_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_irish_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(73, 220, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(73, 220, 0) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(53, 136, 96); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_irish_trouser_checkBox.setText("")
        self.page_person_irish_trouser_checkBox.setObjectName("page_person_irish_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_irish_trouser_checkBox, 3, 2, 1, 1)
        self.page_person_green_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_green_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_green_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_green_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_green_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_green_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_green_trouser_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    background-color: rgb(81, 163, 121);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(81, 163, 121) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"   background-color: rgb(0, 86, 50); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_green_trouser_checkBox.setText("")
        self.page_person_green_trouser_checkBox.setObjectName("page_person_green_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_green_trouser_checkBox, 3, 1, 1, 1)
        self.page_person_rubine_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_rubine_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_rubine_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_rubine_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_rubine_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_rubine_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_rubine_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"   background-color: rgb(255, 0, 127);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(255, 0, 127); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color: rgb(128, 0, 35); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_rubine_trouser_checkBox.setText("")
        self.page_person_rubine_trouser_checkBox.setObjectName("page_person_rubine_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_rubine_trouser_checkBox, 1, 1, 1, 1)
        self.page_person_caramel_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_caramel_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_caramel_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_caramel_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_caramel_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_caramel_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_caramel_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"border-radius: 5px; \n"
"    background-color: rgb(185, 123, 0);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color:rgb(185, 123, 0) rgb(255, 203, 95); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255, 203, 95);/* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_caramel_trouser_checkBox.setText("")
        self.page_person_caramel_trouser_checkBox.setObjectName("page_person_caramel_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_caramel_trouser_checkBox, 4, 0, 1, 1)
        self.page_person_brick_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_brick_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_brick_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_brick_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_brick_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_brick_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_brick_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(177, 0, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color: rgb(177, 0, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255, 0, 0);/* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_brick_trouser_checkBox.setText("")
        self.page_person_brick_trouser_checkBox.setObjectName("page_person_brick_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_brick_trouser_checkBox, 4, 1, 1, 1)
        self.page_person_black_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_black_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_black_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_person_black_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_black_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_black_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_black_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"border-radius: 5px; \n"
"    background-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color: rgb(0,0,0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255,255,255); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check1.png);\n"
"}\n"
"")
        self.page_person_black_trouser_checkBox.setText("")
        self.page_person_black_trouser_checkBox.setObjectName("page_person_black_trouser_checkBox")
        self.gridLayout_33.addWidget(self.page_person_black_trouser_checkBox, 4, 2, 1, 1)
        self.gridLayout_29.addLayout(self.gridLayout_33, 27, 0, 1, 2)
        self.label_27 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_27.setMinimumSize(QtCore.QSize(0, 40))
        self.label_27.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_27.setFont(font)
        self.label_27.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_27.setObjectName("label_27")
        self.gridLayout_29.addWidget(self.label_27, 26, 0, 1, 2)
        self.label_28 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_28.setMinimumSize(QtCore.QSize(0, 30))
        self.label_28.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_28.setFont(font)
        self.label_28.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_28.setObjectName("label_28")
        self.gridLayout_29.addWidget(self.label_28, 42, 0, 1, 2)
        self.gridLayout_32 = QtWidgets.QGridLayout()
        self.gridLayout_32.setContentsMargins(4, -1, -1, -1)
        self.gridLayout_32.setSpacing(9)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.page_person_white_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_white_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_white_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_white_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_white_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_white_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_white_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: white; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #dfe2e6; /* Màu nền khi hover và checkbox được chọn */\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"")
        self.page_person_white_sleeves_checkBox.setText("")
        self.page_person_white_sleeves_checkBox.setObjectName("page_person_white_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_white_sleeves_checkBox, 0, 0, 1, 1)
        self.page_person_red_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_red_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_red_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_red_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_red_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_red_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_red_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"   background-color: rgb(255, 0, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: rgb(255, 0, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(163, 171, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_red_sleeves_checkBox.setText("")
        self.page_person_red_sleeves_checkBox.setObjectName("page_person_red_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_red_sleeves_checkBox, 1, 0, 1, 1)
        self.page_person_blue_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_blue_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_blue_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_blue_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_blue_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_blue_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_blue_sleeves_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(0, 80, 240);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(0, 80, 240) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(13, 20, 55); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_blue_sleeves_checkBox.setText("")
        self.page_person_blue_sleeves_checkBox.setObjectName("page_person_blue_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_blue_sleeves_checkBox, 3, 0, 1, 1)
        self.page_person_orange_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_orange_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_orange_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_orange_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_orange_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_orange_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_orange_sleeves_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(255, 170, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:  rgb(255, 170, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:rgb(102, 47, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_orange_sleeves_checkBox.setText("")
        self.page_person_orange_sleeves_checkBox.setObjectName("page_person_orange_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_orange_sleeves_checkBox, 0, 2, 1, 1)
        self.page_person_denim_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_denim_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_denim_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_denim_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_denim_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_denim_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_denim_sleeves_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(85, 85, 127);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(85, 85, 127) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:rgb(13, 20, 55); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_denim_sleeves_checkBox.setText("")
        self.page_person_denim_sleeves_checkBox.setObjectName("page_person_denim_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_denim_sleeves_checkBox, 2, 2, 1, 1)
        self.page_person_violet_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_violet_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_violet_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_violet_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_violet_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_violet_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_violet_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(71, 36, 107);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(71, 36, 107) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color:rgb(67, 0, 3); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_violet_sleeves_checkBox.setText("")
        self.page_person_violet_sleeves_checkBox.setObjectName("page_person_violet_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_violet_sleeves_checkBox, 2, 1, 1, 1)
        self.page_person_purple_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_purple_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_purple_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_purple_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_purple_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_purple_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_purple_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(170, 85, 255);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(170, 85, 255) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color: rgb(255, 0, 127);/* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_purple_sleeves_checkBox.setText("")
        self.page_person_purple_sleeves_checkBox.setObjectName("page_person_purple_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_purple_sleeves_checkBox, 2, 0, 1, 1)
        self.page_person_berry_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_berry_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_berry_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_berry_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_berry_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_berry_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_berry_sleeves_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(226, 8, 255);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(226, 8, 255) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(128, 0, 35); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_berry_sleeves_checkBox.setText("")
        self.page_person_berry_sleeves_checkBox.setObjectName("page_person_berry_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_berry_sleeves_checkBox, 1, 2, 1, 1)
        self.page_person_irish_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_irish_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_irish_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_irish_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_irish_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_irish_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_irish_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(73, 220, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(73, 220, 0) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(53, 136, 96); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_irish_sleeves_checkBox.setText("")
        self.page_person_irish_sleeves_checkBox.setObjectName("page_person_irish_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_irish_sleeves_checkBox, 3, 2, 1, 1)
        self.page_person_green_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_green_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_green_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_green_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_green_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_green_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_green_sleeves_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    background-color: rgb(81, 163, 121);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(81, 163, 121) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"   background-color: rgb(0, 86, 50); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_green_sleeves_checkBox.setText("")
        self.page_person_green_sleeves_checkBox.setObjectName("page_person_green_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_green_sleeves_checkBox, 3, 1, 1, 1)
        self.page_person_rubine_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_rubine_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_rubine_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_rubine_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_rubine_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_rubine_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_rubine_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"   background-color: rgb(255, 0, 127);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(255, 0, 127); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color: rgb(128, 0, 35); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_person_rubine_sleeves_checkBox.setText("")
        self.page_person_rubine_sleeves_checkBox.setObjectName("page_person_rubine_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_rubine_sleeves_checkBox, 1, 1, 1, 1)
        self.page_person_yellow_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_yellow_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_yellow_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_yellow_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_yellow_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_yellow_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_yellow_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(255, 255, 0);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: rgb(255, 255, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(163, 171, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"")
        self.page_person_yellow_sleeves_checkBox.setText("")
        self.page_person_yellow_sleeves_checkBox.setObjectName("page_person_yellow_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_yellow_sleeves_checkBox, 0, 1, 1, 1)
        self.page_person_caramel_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_caramel_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_caramel_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_caramel_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_caramel_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_caramel_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_caramel_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"border-radius: 5px; \n"
"    background-color: rgb(185, 123, 0);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color:rgb(185, 123, 0) rgb(255, 203, 95); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255, 203, 95);/* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_caramel_sleeves_checkBox.setText("")
        self.page_person_caramel_sleeves_checkBox.setObjectName("page_person_caramel_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_caramel_sleeves_checkBox, 4, 0, 1, 1)
        self.page_person_brick_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_brick_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_brick_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_brick_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_brick_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_brick_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_brick_sleeves_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(177, 0, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color: rgb(177, 0, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255, 0, 0);/* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_person_brick_sleeves_checkBox.setText("")
        self.page_person_brick_sleeves_checkBox.setObjectName("page_person_brick_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_brick_sleeves_checkBox, 4, 1, 1, 1)
        self.page_person_black_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_black_sleeves_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_black_sleeves_checkBox.setSizePolicy(sizePolicy)
        self.page_person_black_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_black_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_person_black_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_black_sleeves_checkBox.setStyleSheet("QCheckBox {\n"
"border-radius: 5px; \n"
"    background-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color: rgb(0,0,0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255,255,255); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check1.png);\n"
"}\n"
"")
        self.page_person_black_sleeves_checkBox.setText("")
        self.page_person_black_sleeves_checkBox.setObjectName("page_person_black_sleeves_checkBox")
        self.gridLayout_32.addWidget(self.page_person_black_sleeves_checkBox, 4, 2, 1, 1)
        self.gridLayout_29.addLayout(self.gridLayout_32, 7, 0, 1, 2)
        self.page_person_trousers_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_trousers_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_trousers_checkBox.setSizePolicy(sizePolicy)
        self.page_person_trousers_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.page_person_trousers_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_trousers_checkBox.setFont(font)
        self.page_person_trousers_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_trousers_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_trousers_checkBox.setObjectName("page_person_trousers_checkBox")
        self.gridLayout_29.addWidget(self.page_person_trousers_checkBox, 25, 0, 1, 2)
        self.label_23 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_23.setMinimumSize(QtCore.QSize(0, 40))
        self.label_23.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_23.setFont(font)
        self.label_23.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_23.setObjectName("label_23")
        self.gridLayout_29.addWidget(self.label_23, 0, 0, 1, 2)
        self.page_person_long_sleeves_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.page_person_long_sleeves_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.page_person_long_sleeves_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_long_sleeves_checkBox.setFont(font)
        self.page_person_long_sleeves_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_long_sleeves_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_long_sleeves_checkBox.setObjectName("page_person_long_sleeves_checkBox")
        self.gridLayout_29.addWidget(self.page_person_long_sleeves_checkBox, 2, 0, 1, 2)
        self.label_26 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_26.setMinimumSize(QtCore.QSize(0, 40))
        self.label_26.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_26.setFont(font)
        self.label_26.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_26.setObjectName("label_26")
        self.gridLayout_29.addWidget(self.label_26, 23, 0, 1, 2)
        self.page_person_trouser_short_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_trouser_short_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_trouser_short_checkBox.setSizePolicy(sizePolicy)
        self.page_person_trouser_short_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.page_person_trouser_short_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_trouser_short_checkBox.setFont(font)
        self.page_person_trouser_short_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_trouser_short_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_trouser_short_checkBox.setObjectName("page_person_trouser_short_checkBox")
        self.gridLayout_29.addWidget(self.page_person_trouser_short_checkBox, 24, 0, 1, 2)
        self.page_person_hat_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_hat_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_hat_checkBox.setSizePolicy(sizePolicy)
        self.page_person_hat_checkBox.setMinimumSize(QtCore.QSize(0, 30))
        self.page_person_hat_checkBox.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_hat_checkBox.setFont(font)
        self.page_person_hat_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_hat_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: red; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:  #ffffff; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_hat_checkBox.setObjectName("page_person_hat_checkBox")
        self.gridLayout_29.addWidget(self.page_person_hat_checkBox, 43, 0, 1, 2)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_10.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.page_person_frame = QtWidgets.QFrame(self.scrollAreaWidgetContents_23)
        self.page_person_frame.setMinimumSize(QtCore.QSize(200, 250))
        self.page_person_frame.setMaximumSize(QtCore.QSize(200, 250))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_frame.setFont(font)
        self.page_person_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.page_person_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.page_person_frame.setObjectName("page_person_frame")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.page_person_frame)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.page_person_shade_low_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_shade_low_checkBox.sizePolicy().hasHeightForWidth())
        self.page_person_shade_low_checkBox.setSizePolicy(sizePolicy)
        self.page_person_shade_low_checkBox.setMinimumSize(QtCore.QSize(65, 20))
        self.page_person_shade_low_checkBox.setMaximumSize(QtCore.QSize(65, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_shade_low_checkBox.setFont(font)
        self.page_person_shade_low_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_shade_low_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_shade_low_checkBox.setObjectName("page_person_shade_low_checkBox")
        self.gridLayout_31.addWidget(self.page_person_shade_low_checkBox, 1, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.page_person_frame)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_31.addWidget(self.line_2, 6, 0, 1, 4)
        self.label_30 = QtWidgets.QLabel(self.page_person_frame)
        self.label_30.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_30.setFont(font)
        self.label_30.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_30.setObjectName("label_30")
        self.gridLayout_31.addWidget(self.label_30, 0, 0, 1, 4)
        self.page_person_shade_medium_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_shade_medium_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_shade_medium_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_shade_medium_checkBox.setFont(font)
        self.page_person_shade_medium_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_shade_medium_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_shade_medium_checkBox.setObjectName("page_person_shade_medium_checkBox")
        self.gridLayout_31.addWidget(self.page_person_shade_medium_checkBox, 1, 1, 1, 1)
        self.label_31 = QtWidgets.QLabel(self.page_person_frame)
        self.label_31.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_31.setFont(font)
        self.label_31.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_31.setObjectName("label_31")
        self.gridLayout_31.addWidget(self.label_31, 2, 0, 1, 4)
        self.page_person_coverage_low_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_coverage_low_checkBox.setMinimumSize(QtCore.QSize(65, 20))
        self.page_person_coverage_low_checkBox.setMaximumSize(QtCore.QSize(65, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_coverage_low_checkBox.setFont(font)
        self.page_person_coverage_low_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_coverage_low_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_coverage_low_checkBox.setObjectName("page_person_coverage_low_checkBox")
        self.gridLayout_31.addWidget(self.page_person_coverage_low_checkBox, 3, 0, 1, 1)
        self.page_person_shade_high_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_shade_high_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_shade_high_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_shade_high_checkBox.setFont(font)
        self.page_person_shade_high_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_shade_high_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_shade_high_checkBox.setObjectName("page_person_shade_high_checkBox")
        self.gridLayout_31.addWidget(self.page_person_shade_high_checkBox, 1, 2, 1, 1)
        self.page_person_tolerance_low_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_tolerance_low_checkBox.setMinimumSize(QtCore.QSize(65, 20))
        self.page_person_tolerance_low_checkBox.setMaximumSize(QtCore.QSize(65, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_tolerance_low_checkBox.setFont(font)
        self.page_person_tolerance_low_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_tolerance_low_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_tolerance_low_checkBox.setObjectName("page_person_tolerance_low_checkBox")
        self.gridLayout_31.addWidget(self.page_person_tolerance_low_checkBox, 5, 0, 1, 1)
        self.page_person_coverage_medium_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_coverage_medium_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_coverage_medium_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_coverage_medium_checkBox.setFont(font)
        self.page_person_coverage_medium_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_coverage_medium_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_coverage_medium_checkBox.setObjectName("page_person_coverage_medium_checkBox")
        self.gridLayout_31.addWidget(self.page_person_coverage_medium_checkBox, 3, 1, 1, 1)
        self.page_person_coverage_high_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_coverage_high_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_coverage_high_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_coverage_high_checkBox.setFont(font)
        self.page_person_coverage_high_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_coverage_high_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_coverage_high_checkBox.setObjectName("page_person_coverage_high_checkBox")
        self.gridLayout_31.addWidget(self.page_person_coverage_high_checkBox, 3, 2, 1, 1)
        self.page_person_tolerance_medium_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_tolerance_medium_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_tolerance_medium_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_tolerance_medium_checkBox.setFont(font)
        self.page_person_tolerance_medium_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_tolerance_medium_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_tolerance_medium_checkBox.setObjectName("page_person_tolerance_medium_checkBox")
        self.gridLayout_31.addWidget(self.page_person_tolerance_medium_checkBox, 5, 1, 1, 1)
        self.page_person_tolerance_high_checkBox = QtWidgets.QCheckBox(self.page_person_frame)
        self.page_person_tolerance_high_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_person_tolerance_high_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_tolerance_high_checkBox.setFont(font)
        self.page_person_tolerance_high_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_tolerance_high_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 20px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_person_tolerance_high_checkBox.setObjectName("page_person_tolerance_high_checkBox")
        self.gridLayout_31.addWidget(self.page_person_tolerance_high_checkBox, 5, 2, 1, 1)
        self.page_person_reset_Button = QtWidgets.QPushButton(self.page_person_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_reset_Button.sizePolicy().hasHeightForWidth())
        self.page_person_reset_Button.setSizePolicy(sizePolicy)
        self.page_person_reset_Button.setMaximumSize(QtCore.QSize(60, 16777215))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_reset_Button.setFont(font)
        self.page_person_reset_Button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_reset_Button.setStyleSheet("QPushButton {\n"
"    background-color: #2e3136; /* Màu nền cơ bản */\n"
"    color: #ffffff; /* Màu chữ */\n"
"    border: 1px solid #1f2225; /* Viền nút */\n"
"    border-radius: 5px; /* Độ cong viền nút */\n"
"    padding: 5px 10px; /* Khoảng cách giữa nội dung và viền nút */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #232527; /* Màu nền khi di chuột qua */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #1a1c1d; /* Màu nền khi nút được nhấn */\n"
"    border: 1px solid #131415; /* Viền khi nút được nhấn */\n"
"}\n"
"")
        self.page_person_reset_Button.setObjectName("page_person_reset_Button")
        self.gridLayout_31.addWidget(self.page_person_reset_Button, 7, 2, 1, 1)
        self.page_person_apply_Button = QtWidgets.QPushButton(self.page_person_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_person_apply_Button.sizePolicy().hasHeightForWidth())
        self.page_person_apply_Button.setSizePolicy(sizePolicy)
        self.page_person_apply_Button.setMinimumSize(QtCore.QSize(100, 0))
        self.page_person_apply_Button.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.page_person_apply_Button.setFont(font)
        self.page_person_apply_Button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_person_apply_Button.setStyleSheet("QPushButton {\n"
"    background-color: #2e3136; /* Màu nền cơ bản */\n"
"    color: #ffffff; /* Màu chữ */\n"
"    border: 1px solid #1f2225; /* Viền nút */\n"
"    border-radius: 5px; /* Độ cong viền nút */\n"
"    padding: 5px 10px; /* Khoảng cách giữa nội dung và viền nút */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #232527; /* Màu nền khi di chuột qua */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #1a1c1d; /* Màu nền khi nút được nhấn */\n"
"    border: 1px solid #131415; /* Viền khi nút được nhấn */\n"
"}\n"
"")
        self.page_person_apply_Button.setObjectName("page_person_apply_Button")
        self.gridLayout_31.addWidget(self.page_person_apply_Button, 7, 0, 1, 1)
        self.label_32 = QtWidgets.QLabel(self.page_person_frame)
        self.label_32.setMinimumSize(QtCore.QSize(0, 30))
        self.label_32.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_32.setFont(font)
        self.label_32.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_32.setObjectName("label_32")
        self.gridLayout_31.addWidget(self.label_32, 4, 0, 1, 4)
        self.gridLayout_10.addWidget(self.page_person_frame, 1, 0, 1, 1)
        self.scrollArea_17.setWidget(self.scrollAreaWidgetContents_23)
        self.layoutWidget2 = QtWidgets.QWidget(self.splitter)
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.page_person_search_widget = QtWidgets.QWidget(self.layoutWidget2)
        self.page_person_search_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_person_search_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_person_search_widget.setObjectName("page_person_search_widget")
        self.gridLayout_58 = QtWidgets.QGridLayout(self.page_person_search_widget)
        self.gridLayout_58.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_58.setSpacing(0)
        self.gridLayout_58.setObjectName("gridLayout_58")
        self.page_person_time_label = QtWidgets.QLabel(self.page_person_search_widget)
        self.page_person_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_person_time_label.setFont(font)
        self.page_person_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_person_time_label.setObjectName("page_person_time_label")
        self.gridLayout_58.addWidget(self.page_person_time_label, 0, 2, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_58.addItem(spacerItem10, 0, 1, 1, 1)
        self.page_person_Button_fitter = QtWidgets.QPushButton(self.page_person_search_widget)
        self.page_person_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_person_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_person_Button_fitter.setText("")
        self.page_person_Button_fitter.setIcon(icon24)
        self.page_person_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_person_Button_fitter.setCheckable(True)
        self.page_person_Button_fitter.setObjectName("page_person_Button_fitter")
        self.gridLayout_58.addWidget(self.page_person_Button_fitter, 1, 0, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_58.addItem(spacerItem11, 0, 3, 1, 1)
        self.page_person_Button = QtWidgets.QPushButton(self.page_person_search_widget)
        self.page_person_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_person_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_person_Button.setText("")
        self.page_person_Button.setIcon(icon23)
        self.page_person_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_person_Button.setCheckable(True)
        self.page_person_Button.setObjectName("page_person_Button")
        self.gridLayout_58.addWidget(self.page_person_Button, 0, 0, 1, 1)
        self.page_person_text_fitter_label_2 = QtWidgets.QLabel(self.page_person_search_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_person_text_fitter_label_2.setFont(font)
        self.page_person_text_fitter_label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_person_text_fitter_label_2.setTextFormat(QtCore.Qt.AutoText)
        self.page_person_text_fitter_label_2.setScaledContents(True)
        self.page_person_text_fitter_label_2.setWordWrap(True)
        self.page_person_text_fitter_label_2.setObjectName("page_person_text_fitter_label_2")
        self.gridLayout_58.addWidget(self.page_person_text_fitter_label_2, 1, 1, 1, 3)
        self.verticalLayout_6.addWidget(self.page_person_search_widget)
        self.scrollArea_16 = QtWidgets.QScrollArea(self.layoutWidget2)
        self.scrollArea_16.setObjectName("scrollArea_16")
        self.scrollAreaWidgetContents_22 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_22.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_22.setObjectName("scrollAreaWidgetContents_22")
        self.scrollArea_16.setWidget(self.scrollAreaWidgetContents_22)
        self.verticalLayout_6.addWidget(self.scrollArea_16)
        self.gridLayout_11.addWidget(self.splitter, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_person_attributes)
        self.page_color = QtWidgets.QWidget()
        self.page_color.setObjectName("page_color")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.page_color)
        self.gridLayout_26.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_26.setSpacing(6)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.splitter_5 = QtWidgets.QSplitter(self.page_color)
        self.splitter_5.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_5.setObjectName("splitter_5")
        self.scrollArea_20 = QtWidgets.QScrollArea(self.splitter_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_20.sizePolicy().hasHeightForWidth())
        self.scrollArea_20.setSizePolicy(sizePolicy)
        self.scrollArea_20.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_20.setWidgetResizable(True)
        self.scrollArea_20.setObjectName("scrollArea_20")
        self.scrollAreaWidgetContents_30 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_30.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_30.setObjectName("scrollAreaWidgetContents_30")
        self.scrollArea_20.setWidget(self.scrollAreaWidgetContents_30)
        self.scrollArea_19 = QtWidgets.QScrollArea(self.splitter_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_19.sizePolicy().hasHeightForWidth())
        self.scrollArea_19.setSizePolicy(sizePolicy)
        self.scrollArea_19.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_19.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_19.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_19.setWidgetResizable(True)
        self.scrollArea_19.setObjectName("scrollArea_19")
        self.scrollAreaWidgetContents_29 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_29.setGeometry(QtCore.QRect(0, 0, 190, 763))
        self.scrollAreaWidgetContents_29.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_29.setObjectName("scrollAreaWidgetContents_29")
        self.gridLayout_39 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_29)
        self.gridLayout_39.setObjectName("gridLayout_39")
        self.label_40 = QtWidgets.QLabel(self.scrollAreaWidgetContents_29)
        self.label_40.setMinimumSize(QtCore.QSize(0, 40))
        self.label_40.setMaximumSize(QtCore.QSize(200, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_40.setFont(font)
        self.label_40.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_40.setObjectName("label_40")
        self.gridLayout_39.addWidget(self.label_40, 0, 0, 1, 1)
        self.line_5 = QtWidgets.QFrame(self.scrollAreaWidgetContents_29)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout_39.addWidget(self.line_5, 1, 0, 1, 1)
        self.gridLayout_36 = QtWidgets.QGridLayout()
        self.gridLayout_36.setContentsMargins(10, 9, 3, 7)
        self.gridLayout_36.setHorizontalSpacing(8)
        self.gridLayout_36.setVerticalSpacing(10)
        self.gridLayout_36.setObjectName("gridLayout_36")
        self.page_color_black_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_black_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_black_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_black_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_black_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_black_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_black_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"border-radius: 5px; \n"
"    background-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color: rgb(0,0,0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255,255,255); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check1.png);\n"
"}\n"
"")
        self.page_color_black_trouser_checkBox.setText("")
        self.page_color_black_trouser_checkBox.setObjectName("page_color_black_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_black_trouser_checkBox, 4, 2, 1, 1)
        self.page_color_violet_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_violet_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_violet_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_violet_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_violet_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_violet_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_violet_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(71, 36, 107);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(71, 36, 107) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color:rgb(67, 0, 3); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_violet_trouser_checkBox.setText("")
        self.page_color_violet_trouser_checkBox.setObjectName("page_color_violet_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_violet_trouser_checkBox, 2, 1, 1, 1)
        self.page_color_rubine_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_rubine_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_rubine_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_rubine_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_rubine_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_rubine_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_rubine_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"   background-color: rgb(255, 0, 127);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(255, 0, 127); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color: rgb(128, 0, 35); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_rubine_trouser_checkBox.setText("")
        self.page_color_rubine_trouser_checkBox.setObjectName("page_color_rubine_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_rubine_trouser_checkBox, 1, 1, 1, 1)
        self.page_color_white_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_white_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_white_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_white_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_white_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_white_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_white_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: white; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #dfe2e6; /* Màu nền khi hover và checkbox được chọn */\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"")
        self.page_color_white_trouser_checkBox.setText("")
        self.page_color_white_trouser_checkBox.setObjectName("page_color_white_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_white_trouser_checkBox, 0, 0, 1, 1)
        self.page_color_purple_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_purple_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_purple_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_purple_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_purple_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_purple_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_purple_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(170, 85, 255);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(170, 85, 255) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"   background-color: rgb(255, 0, 127);/* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_purple_trouser_checkBox.setText("")
        self.page_color_purple_trouser_checkBox.setObjectName("page_color_purple_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_purple_trouser_checkBox, 2, 0, 1, 1)
        self.page_color_blue_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_blue_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_blue_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_blue_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_blue_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_blue_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_blue_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(0, 80, 240);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(0, 80, 240) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(13, 20, 55); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_blue_trouser_checkBox.setText("")
        self.page_color_blue_trouser_checkBox.setObjectName("page_color_blue_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_blue_trouser_checkBox, 3, 0, 1, 1)
        self.page_color_irish_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_irish_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_irish_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_irish_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_irish_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_irish_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_irish_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(73, 220, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(73, 220, 0) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(53, 136, 96); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_color_irish_trouser_checkBox.setText("")
        self.page_color_irish_trouser_checkBox.setObjectName("page_color_irish_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_irish_trouser_checkBox, 3, 2, 1, 1)
        self.page_color_denim_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_denim_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_denim_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_denim_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_denim_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_denim_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_denim_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(85, 85, 127);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(85, 85, 127) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:rgb(13, 20, 55); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_denim_trouser_checkBox.setText("")
        self.page_color_denim_trouser_checkBox.setObjectName("page_color_denim_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_denim_trouser_checkBox, 2, 2, 1, 1)
        self.page_color_caramel_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_caramel_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_caramel_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_caramel_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_caramel_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_caramel_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_caramel_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"border-radius: 5px; \n"
"    background-color: rgb(185, 123, 0);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color:rgb(185, 123, 0) rgb(255, 203, 95); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255, 203, 95);/* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_color_caramel_trouser_checkBox.setText("")
        self.page_color_caramel_trouser_checkBox.setObjectName("page_color_caramel_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_caramel_trouser_checkBox, 4, 0, 1, 1)
        self.page_color_yellow_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_yellow_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_yellow_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_yellow_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_yellow_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_yellow_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_yellow_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"    background-color: rgb(255, 255, 0);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: rgb(255, 255, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(163, 171, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"    border-radius: 5px; /* Adjust the radius to your preference */\n"
"}\n"
"")
        self.page_color_yellow_trouser_checkBox.setText("")
        self.page_color_yellow_trouser_checkBox.setObjectName("page_color_yellow_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_yellow_trouser_checkBox, 0, 1, 1, 1)
        self.page_color_brick_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_brick_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_brick_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_brick_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_brick_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_brick_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_brick_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(177, 0, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"border-radius: 5px; \n"
"    background-color: rgb(177, 0, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"    background-color: rgb(255, 0, 0);/* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_color_brick_trouser_checkBox.setText("")
        self.page_color_brick_trouser_checkBox.setObjectName("page_color_brick_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_brick_trouser_checkBox, 4, 1, 1, 1)
        self.page_color_red_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_red_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_red_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_red_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_red_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_red_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_red_trouser_checkBox.setStyleSheet("QCheckBox {\n"
"   background-color: rgb(255, 0, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: rgb(255, 0, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(163, 171, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_red_trouser_checkBox.setText("")
        self.page_color_red_trouser_checkBox.setObjectName("page_color_red_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_red_trouser_checkBox, 1, 0, 1, 1)
        self.page_color_berry_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_berry_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_berry_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_berry_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_berry_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_berry_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_berry_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(226, 8, 255);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(226, 8, 255) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: rgb(128, 0, 35); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_berry_trouser_checkBox.setText("")
        self.page_color_berry_trouser_checkBox.setObjectName("page_color_berry_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_berry_trouser_checkBox, 1, 2, 1, 1)
        self.page_color_green_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_green_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_green_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_green_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_green_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_green_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_green_trouser_checkBox.setStyleSheet("\n"
"\n"
"QCheckBox {\n"
"    background-color: rgb(81, 163, 121);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:rgb(81, 163, 121) ; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"border-radius: 5px; \n"
"   background-color: rgb(0, 86, 50); /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"border-radius: 5px; \n"
"    image: url(:/newPrefix/check.png);\n"
"}\n"
"")
        self.page_color_green_trouser_checkBox.setText("")
        self.page_color_green_trouser_checkBox.setObjectName("page_color_green_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_green_trouser_checkBox, 3, 1, 1, 1)
        self.page_color_orange_trouser_checkBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_orange_trouser_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_orange_trouser_checkBox.setSizePolicy(sizePolicy)
        self.page_color_orange_trouser_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_orange_trouser_checkBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.page_color_orange_trouser_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_orange_trouser_checkBox.setStyleSheet("\n"
"QCheckBox {\n"
"    background-color: rgb(255, 170, 0);\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color:  rgb(255, 170, 0); /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color:rgb(102, 47, 0); /* Màu nền khi hover và checkbox được chọn */\n"
"border-radius: 5px; \n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    image: url(:/newPrefix/check.png);\n"
"border-radius: 5px; \n"
"}\n"
"")
        self.page_color_orange_trouser_checkBox.setText("")
        self.page_color_orange_trouser_checkBox.setObjectName("page_color_orange_trouser_checkBox")
        self.gridLayout_36.addWidget(self.page_color_orange_trouser_checkBox, 0, 2, 1, 1)
        self.gridLayout_39.addLayout(self.gridLayout_36, 2, 0, 1, 1)
        self.page_color_frame_2 = QtWidgets.QFrame(self.scrollAreaWidgetContents_29)
        self.page_color_frame_2.setMinimumSize(QtCore.QSize(190, 200))
        self.page_color_frame_2.setMaximumSize(QtCore.QSize(190, 200))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_frame_2.setFont(font)
        self.page_color_frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.page_color_frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.page_color_frame_2.setObjectName("page_color_frame_2")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.page_color_frame_2)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.page_color_reset_Button = QtWidgets.QPushButton(self.page_color_frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_reset_Button.sizePolicy().hasHeightForWidth())
        self.page_color_reset_Button.setSizePolicy(sizePolicy)
        self.page_color_reset_Button.setMaximumSize(QtCore.QSize(60, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_reset_Button.setFont(font)
        self.page_color_reset_Button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_reset_Button.setStyleSheet("QPushButton {\n"
"    background-color: #2e3136; /* Màu nền cơ bản */\n"
"    color: #ffffff; /* Màu chữ */\n"
"    border: 1px solid #1f2225; /* Viền nút */\n"
"    border-radius: 5px; /* Độ cong viền nút */\n"
"    padding: 5px 10px; /* Khoảng cách giữa nội dung và viền nút */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #232527; /* Màu nền khi di chuột qua */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #1a1c1d; /* Màu nền khi nút được nhấn */\n"
"    border: 1px solid #131415; /* Viền khi nút được nhấn */\n"
"}\n"
"")
        self.page_color_reset_Button.setObjectName("page_color_reset_Button")
        self.gridLayout_34.addWidget(self.page_color_reset_Button, 7, 2, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.page_color_frame_2)
        self.label_33.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_33.setFont(font)
        self.label_33.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_33.setObjectName("label_33")
        self.gridLayout_34.addWidget(self.label_33, 1, 0, 1, 3)
        self.label_34 = QtWidgets.QLabel(self.page_color_frame_2)
        self.label_34.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_34.setFont(font)
        self.label_34.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_34.setObjectName("label_34")
        self.gridLayout_34.addWidget(self.label_34, 4, 0, 1, 4)
        self.page_color_apply_Button = QtWidgets.QPushButton(self.page_color_frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_apply_Button.sizePolicy().hasHeightForWidth())
        self.page_color_apply_Button.setSizePolicy(sizePolicy)
        self.page_color_apply_Button.setMinimumSize(QtCore.QSize(100, 0))
        self.page_color_apply_Button.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_apply_Button.setFont(font)
        self.page_color_apply_Button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_apply_Button.setStyleSheet("QPushButton {\n"
"    background-color: #2e3136; /* Màu nền cơ bản */\n"
"    color: #ffffff; /* Màu chữ */\n"
"    border: 1px solid #1f2225; /* Viền nút */\n"
"    border-radius: 5px; /* Độ cong viền nút */\n"
"    padding: 5px 10px; /* Khoảng cách giữa nội dung và viền nút */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #232527; /* Màu nền khi di chuột qua */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #1a1c1d; /* Màu nền khi nút được nhấn */\n"
"    border: 1px solid #131415; /* Viền khi nút được nhấn */\n"
"}\n"
"")
        self.page_color_apply_Button.setObjectName("page_color_apply_Button")
        self.gridLayout_34.addWidget(self.page_color_apply_Button, 7, 0, 1, 1)
        self.page_color_coverage_high_checkBox = QtWidgets.QCheckBox(self.page_color_frame_2)
        self.page_color_coverage_high_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_coverage_high_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_coverage_high_checkBox.setFont(font)
        self.page_color_coverage_high_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_coverage_high_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_color_coverage_high_checkBox.setObjectName("page_color_coverage_high_checkBox")
        self.gridLayout_34.addWidget(self.page_color_coverage_high_checkBox, 5, 2, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.page_color_frame_2)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_34.addWidget(self.line_3, 6, 0, 1, 4)
        self.page_color_shade_low_checkBox = QtWidgets.QCheckBox(self.page_color_frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_color_shade_low_checkBox.sizePolicy().hasHeightForWidth())
        self.page_color_shade_low_checkBox.setSizePolicy(sizePolicy)
        self.page_color_shade_low_checkBox.setMinimumSize(QtCore.QSize(65, 20))
        self.page_color_shade_low_checkBox.setMaximumSize(QtCore.QSize(65, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_shade_low_checkBox.setFont(font)
        self.page_color_shade_low_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_shade_low_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_color_shade_low_checkBox.setObjectName("page_color_shade_low_checkBox")
        self.gridLayout_34.addWidget(self.page_color_shade_low_checkBox, 3, 0, 1, 1)
        self.page_color_coverage_medium_checkBox = QtWidgets.QCheckBox(self.page_color_frame_2)
        self.page_color_coverage_medium_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_coverage_medium_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_coverage_medium_checkBox.setFont(font)
        self.page_color_coverage_medium_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_coverage_medium_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_color_coverage_medium_checkBox.setObjectName("page_color_coverage_medium_checkBox")
        self.gridLayout_34.addWidget(self.page_color_coverage_medium_checkBox, 5, 1, 1, 1)
        self.page_color_shade_medium_checkBox = QtWidgets.QCheckBox(self.page_color_frame_2)
        self.page_color_shade_medium_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_shade_medium_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_shade_medium_checkBox.setFont(font)
        self.page_color_shade_medium_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_shade_medium_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_color_shade_medium_checkBox.setObjectName("page_color_shade_medium_checkBox")
        self.gridLayout_34.addWidget(self.page_color_shade_medium_checkBox, 3, 1, 1, 1)
        self.page_color_coverage_low_checkBox = QtWidgets.QCheckBox(self.page_color_frame_2)
        self.page_color_coverage_low_checkBox.setMinimumSize(QtCore.QSize(65, 20))
        self.page_color_coverage_low_checkBox.setMaximumSize(QtCore.QSize(65, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_coverage_low_checkBox.setFont(font)
        self.page_color_coverage_low_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_coverage_low_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_color_coverage_low_checkBox.setObjectName("page_color_coverage_low_checkBox")
        self.gridLayout_34.addWidget(self.page_color_coverage_low_checkBox, 5, 0, 1, 1)
        self.page_color_shade_high_checkBox = QtWidgets.QCheckBox(self.page_color_frame_2)
        self.page_color_shade_high_checkBox.setMinimumSize(QtCore.QSize(0, 20))
        self.page_color_shade_high_checkBox.setMaximumSize(QtCore.QSize(60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.page_color_shade_high_checkBox.setFont(font)
        self.page_color_shade_high_checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_color_shade_high_checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    width: 0;\n"
"    height: 0;\n"
"    border: none;\n"
"    margin: 0;\n"
"    padding: 0;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    padding-left: 10px; /* Điều này tạo ra một khoảng trống bên trái để hiển thị văn bản */\n"
"    color: white; /* Màu chữ mặc định */\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #ff007f; /* Màu nền khi checkbox được chọn */\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    background-color: #c2185b; /* Màu nền khi hover và checkbox được chọn */\n"
"}\n"
"\n"
"QCheckBox:checked {\n"
"    color: red; /* Màu chữ khi checkbox được chọn */\n"
"}\n"
"")
        self.page_color_shade_high_checkBox.setObjectName("page_color_shade_high_checkBox")
        self.gridLayout_34.addWidget(self.page_color_shade_high_checkBox, 3, 2, 1, 1)
        self.line_4 = QtWidgets.QFrame(self.page_color_frame_2)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_34.addWidget(self.line_4, 0, 0, 1, 4)
        self.gridLayout_39.addWidget(self.page_color_frame_2, 3, 0, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.scrollAreaWidgetContents_29)
        self.label_12.setText("")
        self.label_12.setObjectName("label_12")
        self.gridLayout_39.addWidget(self.label_12, 4, 0, 1, 1)
        self.scrollArea_19.setWidget(self.scrollAreaWidgetContents_29)
        self.layoutWidget3 = QtWidgets.QWidget(self.splitter_5)
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.layoutWidget3)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setSpacing(0)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.page_color_search_widget_4 = QtWidgets.QWidget(self.layoutWidget3)
        self.page_color_search_widget_4.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_color_search_widget_4.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_color_search_widget_4.setObjectName("page_color_search_widget_4")
        self.gridLayout_60 = QtWidgets.QGridLayout(self.page_color_search_widget_4)
        self.gridLayout_60.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_60.setSpacing(0)
        self.gridLayout_60.setObjectName("gridLayout_60")
        self.page_color_time_label = QtWidgets.QLabel(self.page_color_search_widget_4)
        self.page_color_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_color_time_label.setFont(font)
        self.page_color_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_color_time_label.setObjectName("page_color_time_label")
        self.gridLayout_60.addWidget(self.page_color_time_label, 0, 2, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_60.addItem(spacerItem12, 0, 1, 1, 1)
        self.page_color_Button_fitter = QtWidgets.QPushButton(self.page_color_search_widget_4)
        self.page_color_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_color_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_color_Button_fitter.setText("")
        self.page_color_Button_fitter.setIcon(icon24)
        self.page_color_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_color_Button_fitter.setCheckable(True)
        self.page_color_Button_fitter.setObjectName("page_color_Button_fitter")
        self.gridLayout_60.addWidget(self.page_color_Button_fitter, 1, 0, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_60.addItem(spacerItem13, 0, 3, 1, 1)
        self.page_color_Button = QtWidgets.QPushButton(self.page_color_search_widget_4)
        self.page_color_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_color_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_color_Button.setText("")
        self.page_color_Button.setIcon(icon23)
        self.page_color_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_color_Button.setCheckable(True)
        self.page_color_Button.setObjectName("page_color_Button")
        self.gridLayout_60.addWidget(self.page_color_Button, 0, 0, 1, 1)
        self.page_color_text_fitter_label = QtWidgets.QLabel(self.page_color_search_widget_4)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_color_text_fitter_label.setFont(font)
        self.page_color_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_color_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_color_text_fitter_label.setScaledContents(True)
        self.page_color_text_fitter_label.setWordWrap(True)
        self.page_color_text_fitter_label.setObjectName("page_color_text_fitter_label")
        self.gridLayout_60.addWidget(self.page_color_text_fitter_label, 1, 1, 1, 3)
        self.gridLayout_13.addWidget(self.page_color_search_widget_4, 0, 0, 1, 1)
        self.scrollArea_22 = QtWidgets.QScrollArea(self.layoutWidget3)
        self.scrollArea_22.setObjectName("scrollArea_22")
        self.scrollAreaWidgetContents_32 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_32.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_32.setObjectName("scrollAreaWidgetContents_32")
        self.scrollArea_22.setWidget(self.scrollAreaWidgetContents_32)
        self.gridLayout_13.addWidget(self.scrollArea_22, 1, 0, 1, 1)
        self.gridLayout_26.addWidget(self.splitter_5, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_color)
        self.page_size = QtWidgets.QWidget()
        self.page_size.setObjectName("page_size")
        self.gridLayout_42 = QtWidgets.QGridLayout(self.page_size)
        self.gridLayout_42.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_42.setSpacing(6)
        self.gridLayout_42.setObjectName("gridLayout_42")
        self.splitter_6 = QtWidgets.QSplitter(self.page_size)
        self.splitter_6.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_6.setObjectName("splitter_6")
        self.scrollArea_24 = QtWidgets.QScrollArea(self.splitter_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_24.sizePolicy().hasHeightForWidth())
        self.scrollArea_24.setSizePolicy(sizePolicy)
        self.scrollArea_24.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_24.setWidgetResizable(True)
        self.scrollArea_24.setObjectName("scrollArea_24")
        self.scrollAreaWidgetContents_34 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_34.setGeometry(QtCore.QRect(0, 0, 148, 763))
        self.scrollAreaWidgetContents_34.setObjectName("scrollAreaWidgetContents_34")
        self.scrollArea_24.setWidget(self.scrollAreaWidgetContents_34)
        self.scrollArea_21 = QtWidgets.QScrollArea(self.splitter_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_21.sizePolicy().hasHeightForWidth())
        self.scrollArea_21.setSizePolicy(sizePolicy)
        self.scrollArea_21.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_21.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_21.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_21.setWidgetResizable(True)
        self.scrollArea_21.setObjectName("scrollArea_21")
        self.scrollAreaWidgetContents_31 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_31.setGeometry(QtCore.QRect(0, 0, 190, 763))
        self.scrollAreaWidgetContents_31.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_31.setObjectName("scrollAreaWidgetContents_31")
        self.scrollArea_21.setWidget(self.scrollAreaWidgetContents_31)
        self.layoutWidget4 = QtWidgets.QWidget(self.splitter_6)
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.gridLayout_40 = QtWidgets.QGridLayout(self.layoutWidget4)
        self.gridLayout_40.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_40.setSpacing(0)
        self.gridLayout_40.setObjectName("gridLayout_40")
        self.page_size_search_widget = QtWidgets.QWidget(self.layoutWidget4)
        self.page_size_search_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_size_search_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_size_search_widget.setObjectName("page_size_search_widget")
        self.gridLayout_63 = QtWidgets.QGridLayout(self.page_size_search_widget)
        self.gridLayout_63.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_63.setSpacing(0)
        self.gridLayout_63.setObjectName("gridLayout_63")
        self.page_size_text_fitter_label = QtWidgets.QLabel(self.page_size_search_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_size_text_fitter_label.setFont(font)
        self.page_size_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_size_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_size_text_fitter_label.setScaledContents(True)
        self.page_size_text_fitter_label.setWordWrap(True)
        self.page_size_text_fitter_label.setObjectName("page_size_text_fitter_label")
        self.gridLayout_63.addWidget(self.page_size_text_fitter_label, 1, 1, 1, 3)
        self.page_size_Button = QtWidgets.QPushButton(self.page_size_search_widget)
        self.page_size_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_size_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_size_Button.setText("")
        self.page_size_Button.setIcon(icon23)
        self.page_size_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_size_Button.setCheckable(True)
        self.page_size_Button.setObjectName("page_size_Button")
        self.gridLayout_63.addWidget(self.page_size_Button, 0, 0, 1, 1)
        self.page_size_time_label = QtWidgets.QLabel(self.page_size_search_widget)
        self.page_size_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_size_time_label.setFont(font)
        self.page_size_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_size_time_label.setObjectName("page_size_time_label")
        self.gridLayout_63.addWidget(self.page_size_time_label, 0, 2, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_63.addItem(spacerItem14, 0, 3, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_63.addItem(spacerItem15, 0, 1, 1, 1)
        self.page_size_Button_fitter = QtWidgets.QPushButton(self.page_size_search_widget)
        self.page_size_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_size_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_size_Button_fitter.setText("")
        self.page_size_Button_fitter.setIcon(icon24)
        self.page_size_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_size_Button_fitter.setCheckable(True)
        self.page_size_Button_fitter.setObjectName("page_size_Button_fitter")
        self.gridLayout_63.addWidget(self.page_size_Button_fitter, 1, 0, 1, 1)
        self.gridLayout_40.addWidget(self.page_size_search_widget, 0, 0, 1, 1)
        self.scrollArea_23 = QtWidgets.QScrollArea(self.layoutWidget4)
        self.scrollArea_23.setObjectName("scrollArea_23")
        self.scrollAreaWidgetContents_33 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_33.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_33.setObjectName("scrollAreaWidgetContents_33")
        self.scrollArea_23.setWidget(self.scrollAreaWidgetContents_33)
        self.gridLayout_40.addWidget(self.scrollArea_23, 1, 0, 1, 1)
        self.gridLayout_42.addWidget(self.splitter_6, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_size)
        self.page_speed = QtWidgets.QWidget()
        self.page_speed.setObjectName("page_speed")
        self.gridLayout_45 = QtWidgets.QGridLayout(self.page_speed)
        self.gridLayout_45.setObjectName("gridLayout_45")
        self.splitter_7 = QtWidgets.QSplitter(self.page_speed)
        self.splitter_7.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_7.setObjectName("splitter_7")
        self.scrollArea_27 = QtWidgets.QScrollArea(self.splitter_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_27.sizePolicy().hasHeightForWidth())
        self.scrollArea_27.setSizePolicy(sizePolicy)
        self.scrollArea_27.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_27.setWidgetResizable(True)
        self.scrollArea_27.setObjectName("scrollArea_27")
        self.scrollAreaWidgetContents_37 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_37.setGeometry(QtCore.QRect(0, 0, 169, 763))
        self.scrollAreaWidgetContents_37.setObjectName("scrollAreaWidgetContents_37")
        self.scrollArea_27.setWidget(self.scrollAreaWidgetContents_37)
        self.scrollArea_26 = QtWidgets.QScrollArea(self.splitter_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_26.sizePolicy().hasHeightForWidth())
        self.scrollArea_26.setSizePolicy(sizePolicy)
        self.scrollArea_26.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_26.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_26.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_26.setWidgetResizable(True)
        self.scrollArea_26.setObjectName("scrollArea_26")
        self.scrollAreaWidgetContents_36 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_36.setGeometry(QtCore.QRect(0, 0, 190, 763))
        self.scrollAreaWidgetContents_36.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_36.setObjectName("scrollAreaWidgetContents_36")
        self.scrollArea_26.setWidget(self.scrollAreaWidgetContents_36)
        self.layoutWidget5 = QtWidgets.QWidget(self.splitter_7)
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.layoutWidget5)
        self.gridLayout_14.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.page_speed_widget = QtWidgets.QWidget(self.layoutWidget5)
        self.page_speed_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_speed_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_speed_widget.setObjectName("page_speed_widget")
        self.gridLayout_64 = QtWidgets.QGridLayout(self.page_speed_widget)
        self.gridLayout_64.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_64.setSpacing(0)
        self.gridLayout_64.setObjectName("gridLayout_64")
        self.page_speed_time_label = QtWidgets.QLabel(self.page_speed_widget)
        self.page_speed_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_speed_time_label.setFont(font)
        self.page_speed_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_speed_time_label.setObjectName("page_speed_time_label")
        self.gridLayout_64.addWidget(self.page_speed_time_label, 0, 2, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_64.addItem(spacerItem16, 0, 1, 1, 1)
        self.page_speed_Button_fitter = QtWidgets.QPushButton(self.page_speed_widget)
        self.page_speed_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_speed_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_speed_Button_fitter.setText("")
        self.page_speed_Button_fitter.setIcon(icon24)
        self.page_speed_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_speed_Button_fitter.setCheckable(True)
        self.page_speed_Button_fitter.setObjectName("page_speed_Button_fitter")
        self.gridLayout_64.addWidget(self.page_speed_Button_fitter, 1, 0, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_64.addItem(spacerItem17, 0, 3, 1, 1)
        self.page_speed_Button = QtWidgets.QPushButton(self.page_speed_widget)
        self.page_speed_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_speed_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_speed_Button.setText("")
        self.page_speed_Button.setIcon(icon23)
        self.page_speed_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_speed_Button.setCheckable(True)
        self.page_speed_Button.setObjectName("page_speed_Button")
        self.gridLayout_64.addWidget(self.page_speed_Button, 0, 0, 1, 1)
        self.page_speed_text_fitter_label = QtWidgets.QLabel(self.page_speed_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_speed_text_fitter_label.setFont(font)
        self.page_speed_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_speed_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_speed_text_fitter_label.setScaledContents(True)
        self.page_speed_text_fitter_label.setWordWrap(True)
        self.page_speed_text_fitter_label.setObjectName("page_speed_text_fitter_label")
        self.gridLayout_64.addWidget(self.page_speed_text_fitter_label, 1, 1, 1, 3)
        self.gridLayout_14.addWidget(self.page_speed_widget, 0, 0, 1, 1)
        self.scrollArea_25 = QtWidgets.QScrollArea(self.layoutWidget5)
        self.scrollArea_25.setObjectName("scrollArea_25")
        self.scrollAreaWidgetContents_35 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_35.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_35.setObjectName("scrollAreaWidgetContents_35")
        self.scrollArea_25.setWidget(self.scrollAreaWidgetContents_35)
        self.gridLayout_14.addWidget(self.scrollArea_25, 1, 0, 1, 1)
        self.gridLayout_45.addWidget(self.splitter_7, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_speed)
        self.page_dwell = QtWidgets.QWidget()
        self.page_dwell.setObjectName("page_dwell")
        self.gridLayout_41 = QtWidgets.QGridLayout(self.page_dwell)
        self.gridLayout_41.setObjectName("gridLayout_41")
        self.splitter_10 = QtWidgets.QSplitter(self.page_dwell)
        self.splitter_10.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_10.setObjectName("splitter_10")
        self.scrollArea_35 = QtWidgets.QScrollArea(self.splitter_10)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_35.sizePolicy().hasHeightForWidth())
        self.scrollArea_35.setSizePolicy(sizePolicy)
        self.scrollArea_35.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_35.setWidgetResizable(True)
        self.scrollArea_35.setObjectName("scrollArea_35")
        self.scrollAreaWidgetContents_45 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_45.setGeometry(QtCore.QRect(0, 0, 169, 763))
        self.scrollAreaWidgetContents_45.setObjectName("scrollAreaWidgetContents_45")
        self.scrollArea_35.setWidget(self.scrollAreaWidgetContents_45)
        self.scrollArea_36 = QtWidgets.QScrollArea(self.splitter_10)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_36.sizePolicy().hasHeightForWidth())
        self.scrollArea_36.setSizePolicy(sizePolicy)
        self.scrollArea_36.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_36.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_36.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_36.setWidgetResizable(True)
        self.scrollArea_36.setObjectName("scrollArea_36")
        self.scrollAreaWidgetContents_46 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_46.setGeometry(QtCore.QRect(0, 0, 190, 763))
        self.scrollAreaWidgetContents_46.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_46.setObjectName("scrollAreaWidgetContents_46")
        self.scrollArea_36.setWidget(self.scrollAreaWidgetContents_46)
        self.layoutWidget_2 = QtWidgets.QWidget(self.splitter_10)
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.layoutWidget_2)
        self.gridLayout_15.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.page_dwell_widget = QtWidgets.QWidget(self.layoutWidget_2)
        self.page_dwell_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_dwell_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_dwell_widget.setObjectName("page_dwell_widget")
        self.gridLayout_67 = QtWidgets.QGridLayout(self.page_dwell_widget)
        self.gridLayout_67.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_67.setSpacing(0)
        self.gridLayout_67.setObjectName("gridLayout_67")
        self.page_dwell_time_label = QtWidgets.QLabel(self.page_dwell_widget)
        self.page_dwell_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_dwell_time_label.setFont(font)
        self.page_dwell_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_dwell_time_label.setObjectName("page_dwell_time_label")
        self.gridLayout_67.addWidget(self.page_dwell_time_label, 0, 2, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_67.addItem(spacerItem18, 0, 1, 1, 1)
        self.page_dwell_Button_fitter = QtWidgets.QPushButton(self.page_dwell_widget)
        self.page_dwell_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_dwell_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_dwell_Button_fitter.setText("")
        self.page_dwell_Button_fitter.setIcon(icon24)
        self.page_dwell_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_dwell_Button_fitter.setCheckable(True)
        self.page_dwell_Button_fitter.setObjectName("page_dwell_Button_fitter")
        self.gridLayout_67.addWidget(self.page_dwell_Button_fitter, 1, 0, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_67.addItem(spacerItem19, 0, 3, 1, 1)
        self.page_dwell_Button = QtWidgets.QPushButton(self.page_dwell_widget)
        self.page_dwell_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_dwell_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_dwell_Button.setText("")
        self.page_dwell_Button.setIcon(icon23)
        self.page_dwell_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_dwell_Button.setCheckable(True)
        self.page_dwell_Button.setObjectName("page_dwell_Button")
        self.gridLayout_67.addWidget(self.page_dwell_Button, 0, 0, 1, 1)
        self.page_dwell_text_fitter_label = QtWidgets.QLabel(self.page_dwell_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_dwell_text_fitter_label.setFont(font)
        self.page_dwell_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_dwell_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_dwell_text_fitter_label.setScaledContents(True)
        self.page_dwell_text_fitter_label.setWordWrap(True)
        self.page_dwell_text_fitter_label.setObjectName("page_dwell_text_fitter_label")
        self.gridLayout_67.addWidget(self.page_dwell_text_fitter_label, 1, 1, 1, 3)
        self.gridLayout_15.addWidget(self.page_dwell_widget, 0, 0, 1, 1)
        self.scrollArea_34 = QtWidgets.QScrollArea(self.layoutWidget_2)
        self.scrollArea_34.setObjectName("scrollArea_34")
        self.scrollAreaWidgetContents_44 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_44.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_44.setObjectName("scrollAreaWidgetContents_44")
        self.scrollArea_34.setWidget(self.scrollAreaWidgetContents_44)
        self.gridLayout_15.addWidget(self.scrollArea_34, 1, 0, 1, 1)
        self.gridLayout_41.addWidget(self.splitter_10, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_dwell)
        self.page_direction = QtWidgets.QWidget()
        self.page_direction.setObjectName("page_direction")
        self.gridLayout_38 = QtWidgets.QGridLayout(self.page_direction)
        self.gridLayout_38.setObjectName("gridLayout_38")
        self.splitter_9 = QtWidgets.QSplitter(self.page_direction)
        self.splitter_9.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_9.setObjectName("splitter_9")
        self.scrollArea_32 = QtWidgets.QScrollArea(self.splitter_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_32.sizePolicy().hasHeightForWidth())
        self.scrollArea_32.setSizePolicy(sizePolicy)
        self.scrollArea_32.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_32.setWidgetResizable(True)
        self.scrollArea_32.setObjectName("scrollArea_32")
        self.scrollAreaWidgetContents_42 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_42.setGeometry(QtCore.QRect(0, 0, 169, 763))
        self.scrollAreaWidgetContents_42.setObjectName("scrollAreaWidgetContents_42")
        self.scrollArea_32.setWidget(self.scrollAreaWidgetContents_42)
        self.scrollArea_33 = QtWidgets.QScrollArea(self.splitter_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_33.sizePolicy().hasHeightForWidth())
        self.scrollArea_33.setSizePolicy(sizePolicy)
        self.scrollArea_33.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_33.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_33.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_33.setWidgetResizable(True)
        self.scrollArea_33.setObjectName("scrollArea_33")
        self.scrollAreaWidgetContents_43 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_43.setGeometry(QtCore.QRect(0, 0, 190, 763))
        self.scrollAreaWidgetContents_43.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_43.setObjectName("scrollAreaWidgetContents_43")
        self.scrollArea_33.setWidget(self.scrollAreaWidgetContents_43)
        self.layoutWidget_3 = QtWidgets.QWidget(self.splitter_9)
        self.layoutWidget_3.setObjectName("layoutWidget_3")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.layoutWidget_3)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.page_direction_widget = QtWidgets.QWidget(self.layoutWidget_3)
        self.page_direction_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_direction_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_direction_widget.setObjectName("page_direction_widget")
        self.gridLayout_66 = QtWidgets.QGridLayout(self.page_direction_widget)
        self.gridLayout_66.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_66.setSpacing(0)
        self.gridLayout_66.setObjectName("gridLayout_66")
        self.page_direction_time_label = QtWidgets.QLabel(self.page_direction_widget)
        self.page_direction_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_direction_time_label.setFont(font)
        self.page_direction_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_direction_time_label.setObjectName("page_direction_time_label")
        self.gridLayout_66.addWidget(self.page_direction_time_label, 0, 2, 1, 1)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_66.addItem(spacerItem20, 0, 1, 1, 1)
        self.page_direction_Button_fitter = QtWidgets.QPushButton(self.page_direction_widget)
        self.page_direction_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_direction_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_direction_Button_fitter.setText("")
        self.page_direction_Button_fitter.setIcon(icon24)
        self.page_direction_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_direction_Button_fitter.setCheckable(True)
        self.page_direction_Button_fitter.setObjectName("page_direction_Button_fitter")
        self.gridLayout_66.addWidget(self.page_direction_Button_fitter, 1, 0, 1, 1)
        spacerItem21 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_66.addItem(spacerItem21, 0, 3, 1, 1)
        self.page_direction_Button = QtWidgets.QPushButton(self.page_direction_widget)
        self.page_direction_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_direction_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_direction_Button.setText("")
        self.page_direction_Button.setIcon(icon23)
        self.page_direction_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_direction_Button.setCheckable(True)
        self.page_direction_Button.setObjectName("page_direction_Button")
        self.gridLayout_66.addWidget(self.page_direction_Button, 0, 0, 1, 1)
        self.page_direction_text_fitter_label = QtWidgets.QLabel(self.page_direction_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_direction_text_fitter_label.setFont(font)
        self.page_direction_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_direction_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_direction_text_fitter_label.setScaledContents(True)
        self.page_direction_text_fitter_label.setWordWrap(True)
        self.page_direction_text_fitter_label.setObjectName("page_direction_text_fitter_label")
        self.gridLayout_66.addWidget(self.page_direction_text_fitter_label, 1, 1, 1, 3)
        self.gridLayout_16.addWidget(self.page_direction_widget, 0, 0, 1, 1)
        self.scrollArea_31 = QtWidgets.QScrollArea(self.layoutWidget_3)
        self.scrollArea_31.setObjectName("scrollArea_31")
        self.scrollAreaWidgetContents_41 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_41.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_41.setObjectName("scrollAreaWidgetContents_41")
        self.scrollArea_31.setWidget(self.scrollAreaWidgetContents_41)
        self.gridLayout_16.addWidget(self.scrollArea_31, 1, 0, 1, 1)
        self.gridLayout_38.addWidget(self.splitter_9, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_direction)
        self.page_proximity = QtWidgets.QWidget()
        self.page_proximity.setObjectName("page_proximity")
        self.gridLayout_37 = QtWidgets.QGridLayout(self.page_proximity)
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.splitter_14 = QtWidgets.QSplitter(self.page_proximity)
        self.splitter_14.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_14.setObjectName("splitter_14")
        self.scrollArea_29 = QtWidgets.QScrollArea(self.splitter_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_29.sizePolicy().hasHeightForWidth())
        self.scrollArea_29.setSizePolicy(sizePolicy)
        self.scrollArea_29.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_29.setWidgetResizable(True)
        self.scrollArea_29.setObjectName("scrollArea_29")
        self.scrollAreaWidgetContents_39 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_39.setGeometry(QtCore.QRect(0, 0, 218, 763))
        self.scrollAreaWidgetContents_39.setObjectName("scrollAreaWidgetContents_39")
        self.scrollArea_29.setWidget(self.scrollAreaWidgetContents_39)
        self.widget1 = QtWidgets.QWidget(self.splitter_14)
        self.widget1.setObjectName("widget1")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.widget1)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.page_proximity_widget = QtWidgets.QWidget(self.widget1)
        self.page_proximity_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_proximity_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_proximity_widget.setObjectName("page_proximity_widget")
        self.gridLayout_65 = QtWidgets.QGridLayout(self.page_proximity_widget)
        self.gridLayout_65.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_65.setSpacing(0)
        self.gridLayout_65.setObjectName("gridLayout_65")
        self.page_proximity_time_label = QtWidgets.QLabel(self.page_proximity_widget)
        self.page_proximity_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_proximity_time_label.setFont(font)
        self.page_proximity_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_proximity_time_label.setObjectName("page_proximity_time_label")
        self.gridLayout_65.addWidget(self.page_proximity_time_label, 0, 2, 1, 1)
        self.page_proximity_text_fitter_label = QtWidgets.QLabel(self.page_proximity_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_proximity_text_fitter_label.setFont(font)
        self.page_proximity_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_proximity_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_proximity_text_fitter_label.setScaledContents(True)
        self.page_proximity_text_fitter_label.setWordWrap(True)
        self.page_proximity_text_fitter_label.setObjectName("page_proximity_text_fitter_label")
        self.gridLayout_65.addWidget(self.page_proximity_text_fitter_label, 1, 1, 1, 3)
        spacerItem22 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_65.addItem(spacerItem22, 0, 3, 1, 2)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_65.addItem(spacerItem23, 0, 0, 1, 2)
        self.page_proximity_Button_fitter = QtWidgets.QPushButton(self.page_proximity_widget)
        self.page_proximity_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_proximity_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_proximity_Button_fitter.setText("")
        self.page_proximity_Button_fitter.setIcon(icon24)
        self.page_proximity_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_proximity_Button_fitter.setCheckable(True)
        self.page_proximity_Button_fitter.setObjectName("page_proximity_Button_fitter")
        self.gridLayout_65.addWidget(self.page_proximity_Button_fitter, 1, 4, 1, 1)
        self.page_proximity_Button = QtWidgets.QPushButton(self.page_proximity_widget)
        self.page_proximity_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_proximity_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_proximity_Button.setText("")
        self.page_proximity_Button.setIcon(icon23)
        self.page_proximity_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_proximity_Button.setCheckable(True)
        self.page_proximity_Button.setObjectName("page_proximity_Button")
        self.gridLayout_65.addWidget(self.page_proximity_Button, 1, 0, 1, 1)
        self.gridLayout_17.addWidget(self.page_proximity_widget, 0, 0, 1, 1)
        self.splitter_8 = QtWidgets.QSplitter(self.widget1)
        self.splitter_8.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_8.setObjectName("splitter_8")
        self.scrollArea_28 = QtWidgets.QScrollArea(self.splitter_8)
        self.scrollArea_28.setObjectName("scrollArea_28")
        self.scrollAreaWidgetContents_38 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_38.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_38.setObjectName("scrollAreaWidgetContents_38")
        self.scrollArea_28.setWidget(self.scrollAreaWidgetContents_38)
        self.scrollArea_30 = QtWidgets.QScrollArea(self.splitter_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_30.sizePolicy().hasHeightForWidth())
        self.scrollArea_30.setSizePolicy(sizePolicy)
        self.scrollArea_30.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_30.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_30.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_30.setWidgetResizable(True)
        self.scrollArea_30.setObjectName("scrollArea_30")
        self.scrollAreaWidgetContents_40 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_40.setGeometry(QtCore.QRect(0, 0, 190, 705))
        self.scrollAreaWidgetContents_40.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_40.setObjectName("scrollAreaWidgetContents_40")
        self.scrollArea_30.setWidget(self.scrollAreaWidgetContents_40)
        self.gridLayout_17.addWidget(self.splitter_8, 1, 0, 1, 1)
        self.gridLayout_37.addWidget(self.splitter_14, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_proximity)
        self.page_appearance_similarity = QtWidgets.QWidget()
        self.page_appearance_similarity.setObjectName("page_appearance_similarity")
        self.gridLayout_43 = QtWidgets.QGridLayout(self.page_appearance_similarity)
        self.gridLayout_43.setObjectName("gridLayout_43")
        self.splitter_15 = QtWidgets.QSplitter(self.page_appearance_similarity)
        self.splitter_15.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_15.setObjectName("splitter_15")
        self.scrollArea_37 = QtWidgets.QScrollArea(self.splitter_15)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_37.sizePolicy().hasHeightForWidth())
        self.scrollArea_37.setSizePolicy(sizePolicy)
        self.scrollArea_37.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_37.setWidgetResizable(True)
        self.scrollArea_37.setObjectName("scrollArea_37")
        self.scrollAreaWidgetContents_47 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_47.setGeometry(QtCore.QRect(0, 0, 218, 763))
        self.scrollAreaWidgetContents_47.setObjectName("scrollAreaWidgetContents_47")
        self.scrollArea_37.setWidget(self.scrollAreaWidgetContents_47)
        self.layoutWidget_4 = QtWidgets.QWidget(self.splitter_15)
        self.layoutWidget_4.setObjectName("layoutWidget_4")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.layoutWidget_4)
        self.gridLayout_18.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_18.setSpacing(0)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.splitter_11 = QtWidgets.QSplitter(self.layoutWidget_4)
        self.splitter_11.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_11.setObjectName("splitter_11")
        self.scrollArea_38 = QtWidgets.QScrollArea(self.splitter_11)
        self.scrollArea_38.setObjectName("scrollArea_38")
        self.scrollAreaWidgetContents_48 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_48.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_48.setObjectName("scrollAreaWidgetContents_48")
        self.scrollArea_38.setWidget(self.scrollAreaWidgetContents_48)
        self.scrollArea_39 = QtWidgets.QScrollArea(self.splitter_11)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_39.sizePolicy().hasHeightForWidth())
        self.scrollArea_39.setSizePolicy(sizePolicy)
        self.scrollArea_39.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_39.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_39.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_39.setWidgetResizable(True)
        self.scrollArea_39.setObjectName("scrollArea_39")
        self.scrollAreaWidgetContents_49 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_49.setGeometry(QtCore.QRect(0, 0, 190, 711))
        self.scrollAreaWidgetContents_49.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_49.setObjectName("scrollAreaWidgetContents_49")
        self.scrollArea_39.setWidget(self.scrollAreaWidgetContents_49)
        self.gridLayout_18.addWidget(self.splitter_11, 1, 0, 1, 1)
        self.page_appearance_similarity_widget = QtWidgets.QWidget(self.layoutWidget_4)
        self.page_appearance_similarity_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_appearance_similarity_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_appearance_similarity_widget.setObjectName("page_appearance_similarity_widget")
        self.gridLayout_68 = QtWidgets.QGridLayout(self.page_appearance_similarity_widget)
        self.gridLayout_68.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_68.setSpacing(0)
        self.gridLayout_68.setObjectName("gridLayout_68")
        self.page_appearance_similarity_time_label = QtWidgets.QLabel(self.page_appearance_similarity_widget)
        self.page_appearance_similarity_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_appearance_similarity_time_label.setFont(font)
        self.page_appearance_similarity_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_appearance_similarity_time_label.setObjectName("page_appearance_similarity_time_label")
        self.gridLayout_68.addWidget(self.page_appearance_similarity_time_label, 0, 2, 1, 1)
        self.page_appearance_similarity_text_fitter_label = QtWidgets.QLabel(self.page_appearance_similarity_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_appearance_similarity_text_fitter_label.setFont(font)
        self.page_appearance_similarity_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_appearance_similarity_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_appearance_similarity_text_fitter_label.setScaledContents(True)
        self.page_appearance_similarity_text_fitter_label.setWordWrap(True)
        self.page_appearance_similarity_text_fitter_label.setObjectName("page_appearance_similarity_text_fitter_label")
        self.gridLayout_68.addWidget(self.page_appearance_similarity_text_fitter_label, 1, 1, 1, 3)
        spacerItem24 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_68.addItem(spacerItem24, 0, 3, 1, 2)
        spacerItem25 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_68.addItem(spacerItem25, 0, 0, 1, 2)
        self.page_appearance_similarity_Button_fitter = QtWidgets.QPushButton(self.page_appearance_similarity_widget)
        self.page_appearance_similarity_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_appearance_similarity_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_appearance_similarity_Button_fitter.setText("")
        self.page_appearance_similarity_Button_fitter.setIcon(icon24)
        self.page_appearance_similarity_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_appearance_similarity_Button_fitter.setCheckable(True)
        self.page_appearance_similarity_Button_fitter.setObjectName("page_appearance_similarity_Button_fitter")
        self.gridLayout_68.addWidget(self.page_appearance_similarity_Button_fitter, 1, 4, 1, 1)
        self.page_appearance_similarity_Button = QtWidgets.QPushButton(self.page_appearance_similarity_widget)
        self.page_appearance_similarity_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_appearance_similarity_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_appearance_similarity_Button.setText("")
        self.page_appearance_similarity_Button.setIcon(icon23)
        self.page_appearance_similarity_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_appearance_similarity_Button.setCheckable(True)
        self.page_appearance_similarity_Button.setObjectName("page_appearance_similarity_Button")
        self.gridLayout_68.addWidget(self.page_appearance_similarity_Button, 1, 0, 1, 1)
        self.gridLayout_18.addWidget(self.page_appearance_similarity_widget, 0, 0, 1, 1)
        self.gridLayout_43.addWidget(self.splitter_15, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_appearance_similarity)
        self.page_face_reco = QtWidgets.QWidget()
        self.page_face_reco.setObjectName("page_face_reco")
        self.gridLayout_44 = QtWidgets.QGridLayout(self.page_face_reco)
        self.gridLayout_44.setObjectName("gridLayout_44")
        self.splitter_16 = QtWidgets.QSplitter(self.page_face_reco)
        self.splitter_16.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_16.setObjectName("splitter_16")
        self.scrollArea_41 = QtWidgets.QScrollArea(self.splitter_16)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_41.sizePolicy().hasHeightForWidth())
        self.scrollArea_41.setSizePolicy(sizePolicy)
        self.scrollArea_41.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_41.setWidgetResizable(True)
        self.scrollArea_41.setObjectName("scrollArea_41")
        self.scrollAreaWidgetContents_51 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_51.setGeometry(QtCore.QRect(0, 0, 218, 763))
        self.scrollAreaWidgetContents_51.setObjectName("scrollAreaWidgetContents_51")
        self.scrollArea_41.setWidget(self.scrollAreaWidgetContents_51)
        self.widget2 = QtWidgets.QWidget(self.splitter_16)
        self.widget2.setObjectName("widget2")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.widget2)
        self.gridLayout_19.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_19.setSpacing(0)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.page_face_reco_widget = QtWidgets.QWidget(self.widget2)
        self.page_face_reco_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_face_reco_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_face_reco_widget.setObjectName("page_face_reco_widget")
        self.gridLayout_69 = QtWidgets.QGridLayout(self.page_face_reco_widget)
        self.gridLayout_69.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_69.setSpacing(0)
        self.gridLayout_69.setObjectName("gridLayout_69")
        self.page_face_reco_text_fitter_label = QtWidgets.QLabel(self.page_face_reco_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_face_reco_text_fitter_label.setFont(font)
        self.page_face_reco_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_face_reco_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_face_reco_text_fitter_label.setScaledContents(True)
        self.page_face_reco_text_fitter_label.setWordWrap(True)
        self.page_face_reco_text_fitter_label.setObjectName("page_face_reco_text_fitter_label")
        self.gridLayout_69.addWidget(self.page_face_reco_text_fitter_label, 2, 1, 1, 3)
        self.page_face_reco_time_label = QtWidgets.QLabel(self.page_face_reco_widget)
        self.page_face_reco_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_face_reco_time_label.setFont(font)
        self.page_face_reco_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_face_reco_time_label.setObjectName("page_face_reco_time_label")
        self.gridLayout_69.addWidget(self.page_face_reco_time_label, 0, 2, 1, 1)
        spacerItem26 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_69.addItem(spacerItem26, 0, 0, 1, 2)
        spacerItem27 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_69.addItem(spacerItem27, 0, 3, 1, 2)
        self.page_face_reco_Button = QtWidgets.QPushButton(self.page_face_reco_widget)
        self.page_face_reco_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_face_reco_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_face_reco_Button.setText("")
        self.page_face_reco_Button.setIcon(icon23)
        self.page_face_reco_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_face_reco_Button.setCheckable(True)
        self.page_face_reco_Button.setObjectName("page_face_reco_Button")
        self.gridLayout_69.addWidget(self.page_face_reco_Button, 2, 0, 1, 1)
        self.page_face_reco_Button_fitter = QtWidgets.QPushButton(self.page_face_reco_widget)
        self.page_face_reco_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_face_reco_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_face_reco_Button_fitter.setText("")
        self.page_face_reco_Button_fitter.setIcon(icon24)
        self.page_face_reco_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_face_reco_Button_fitter.setCheckable(True)
        self.page_face_reco_Button_fitter.setObjectName("page_face_reco_Button_fitter")
        self.gridLayout_69.addWidget(self.page_face_reco_Button_fitter, 2, 4, 1, 1)
        self.gridLayout_19.addWidget(self.page_face_reco_widget, 0, 0, 1, 1)
        self.splitter_12 = QtWidgets.QSplitter(self.widget2)
        self.splitter_12.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_12.setObjectName("splitter_12")
        self.scrollArea_40 = QtWidgets.QScrollArea(self.splitter_12)
        self.scrollArea_40.setObjectName("scrollArea_40")
        self.scrollAreaWidgetContents_50 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_50.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_50.setObjectName("scrollAreaWidgetContents_50")
        self.scrollArea_40.setWidget(self.scrollAreaWidgetContents_50)
        self.scrollArea_42 = QtWidgets.QScrollArea(self.splitter_12)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_42.sizePolicy().hasHeightForWidth())
        self.scrollArea_42.setSizePolicy(sizePolicy)
        self.scrollArea_42.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_42.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_42.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_42.setWidgetResizable(True)
        self.scrollArea_42.setObjectName("scrollArea_42")
        self.scrollAreaWidgetContents_52 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_52.setGeometry(QtCore.QRect(0, 0, 190, 711))
        self.scrollAreaWidgetContents_52.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_52.setObjectName("scrollAreaWidgetContents_52")
        self.scrollArea_42.setWidget(self.scrollAreaWidgetContents_52)
        self.gridLayout_19.addWidget(self.splitter_12, 1, 0, 1, 1)
        self.gridLayout_44.addWidget(self.splitter_16, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_face_reco)
        self.page_license_plate_reco = QtWidgets.QWidget()
        self.page_license_plate_reco.setObjectName("page_license_plate_reco")
        self.gridLayout_46 = QtWidgets.QGridLayout(self.page_license_plate_reco)
        self.gridLayout_46.setObjectName("gridLayout_46")
        self.splitter_17 = QtWidgets.QSplitter(self.page_license_plate_reco)
        self.splitter_17.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_17.setObjectName("splitter_17")
        self.scrollArea_44 = QtWidgets.QScrollArea(self.splitter_17)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_44.sizePolicy().hasHeightForWidth())
        self.scrollArea_44.setSizePolicy(sizePolicy)
        self.scrollArea_44.setMinimumSize(QtCore.QSize(150, 0))
        self.scrollArea_44.setWidgetResizable(True)
        self.scrollArea_44.setObjectName("scrollArea_44")
        self.scrollAreaWidgetContents_54 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_54.setGeometry(QtCore.QRect(0, 0, 218, 763))
        self.scrollAreaWidgetContents_54.setObjectName("scrollAreaWidgetContents_54")
        self.scrollArea_44.setWidget(self.scrollAreaWidgetContents_54)
        self.widget3 = QtWidgets.QWidget(self.splitter_17)
        self.widget3.setObjectName("widget3")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.widget3)
        self.gridLayout_20.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.page_license_plate_reco_widget = QtWidgets.QWidget(self.widget3)
        self.page_license_plate_reco_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.page_license_plate_reco_widget.setStyleSheet("background-color: rgb(46, 49, 54);")
        self.page_license_plate_reco_widget.setObjectName("page_license_plate_reco_widget")
        self.gridLayout_70 = QtWidgets.QGridLayout(self.page_license_plate_reco_widget)
        self.gridLayout_70.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_70.setSpacing(0)
        self.gridLayout_70.setObjectName("gridLayout_70")
        self.page_license_plate_reco_time_label = QtWidgets.QLabel(self.page_license_plate_reco_widget)
        self.page_license_plate_reco_time_label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.page_license_plate_reco_time_label.setFont(font)
        self.page_license_plate_reco_time_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_license_plate_reco_time_label.setObjectName("page_license_plate_reco_time_label")
        self.gridLayout_70.addWidget(self.page_license_plate_reco_time_label, 0, 2, 1, 1)
        self.page_license_plate_reco_text_fitter_label = QtWidgets.QLabel(self.page_license_plate_reco_widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.page_license_plate_reco_text_fitter_label.setFont(font)
        self.page_license_plate_reco_text_fitter_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.page_license_plate_reco_text_fitter_label.setTextFormat(QtCore.Qt.AutoText)
        self.page_license_plate_reco_text_fitter_label.setScaledContents(True)
        self.page_license_plate_reco_text_fitter_label.setWordWrap(True)
        self.page_license_plate_reco_text_fitter_label.setObjectName("page_license_plate_reco_text_fitter_label")
        self.gridLayout_70.addWidget(self.page_license_plate_reco_text_fitter_label, 1, 1, 1, 3)
        self.page_license_plate_reco_Button_fitter = QtWidgets.QPushButton(self.page_license_plate_reco_widget)
        self.page_license_plate_reco_Button_fitter.setMinimumSize(QtCore.QSize(20, 20))
        self.page_license_plate_reco_Button_fitter.setMaximumSize(QtCore.QSize(20, 20))
        self.page_license_plate_reco_Button_fitter.setText("")
        self.page_license_plate_reco_Button_fitter.setIcon(icon24)
        self.page_license_plate_reco_Button_fitter.setIconSize(QtCore.QSize(15, 15))
        self.page_license_plate_reco_Button_fitter.setCheckable(True)
        self.page_license_plate_reco_Button_fitter.setObjectName("page_license_plate_reco_Button_fitter")
        self.gridLayout_70.addWidget(self.page_license_plate_reco_Button_fitter, 1, 4, 1, 1)
        self.page_license_plate_reco_Button = QtWidgets.QPushButton(self.page_license_plate_reco_widget)
        self.page_license_plate_reco_Button.setMinimumSize(QtCore.QSize(20, 20))
        self.page_license_plate_reco_Button.setMaximumSize(QtCore.QSize(20, 20))
        self.page_license_plate_reco_Button.setText("")
        self.page_license_plate_reco_Button.setIcon(icon23)
        self.page_license_plate_reco_Button.setIconSize(QtCore.QSize(15, 15))
        self.page_license_plate_reco_Button.setCheckable(True)
        self.page_license_plate_reco_Button.setObjectName("page_license_plate_reco_Button")
        self.gridLayout_70.addWidget(self.page_license_plate_reco_Button, 1, 0, 1, 1)
        spacerItem28 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_70.addItem(spacerItem28, 0, 0, 1, 2)
        spacerItem29 = QtWidgets.QSpacerItem(30, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_70.addItem(spacerItem29, 0, 3, 1, 2)
        self.gridLayout_20.addWidget(self.page_license_plate_reco_widget, 0, 0, 1, 1)
        self.splitter_13 = QtWidgets.QSplitter(self.widget3)
        self.splitter_13.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_13.setObjectName("splitter_13")
        self.scrollArea_43 = QtWidgets.QScrollArea(self.splitter_13)
        self.scrollArea_43.setObjectName("scrollArea_43")
        self.scrollAreaWidgetContents_53 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_53.setGeometry(QtCore.QRect(0, 0, 563, 711))
        self.scrollAreaWidgetContents_53.setObjectName("scrollAreaWidgetContents_53")
        self.scrollArea_43.setWidget(self.scrollAreaWidgetContents_53)
        self.scrollArea_45 = QtWidgets.QScrollArea(self.splitter_13)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_45.sizePolicy().hasHeightForWidth())
        self.scrollArea_45.setSizePolicy(sizePolicy)
        self.scrollArea_45.setMinimumSize(QtCore.QSize(200, 0))
        self.scrollArea_45.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea_45.setStyleSheet("/* HANDLE BAR VERTICAL */\n"
"QScrollBar:vertical {\n"
"    background-color: #2e3136; /* Màu nền #2e3136 */\n"
"    width: 15px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #8f9296; /* Màu khi không hover và nhấn */\n"
"    min-height: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #cfd1d4; /* Màu khi hover */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background-color: #cfd1d4; /* Màu khi nhấn */\n"
"}\n"
"\n"
"/* BTN TOP - SCROLLBAR */\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* BTN BOTTOM - SCROLLBAR */\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background-color: #cfd1d4; /* Màu nền #3b3b5a */\n"
"    height: 0;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* RESET ARROW */\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* HORIZONTAL SCROLLBAR - HOMEWORK */\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #8f9296;\n"
"    min-width: 30px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:pressed {\n"
"    background-color: #cfd1d4;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    border: none;\n"
"    background-color: #cfd1d4;\n"
"    width: 0;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"")
        self.scrollArea_45.setWidgetResizable(True)
        self.scrollArea_45.setObjectName("scrollArea_45")
        self.scrollAreaWidgetContents_55 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_55.setGeometry(QtCore.QRect(0, 0, 190, 705))
        self.scrollAreaWidgetContents_55.setMaximumSize(QtCore.QSize(190, 16777215))
        self.scrollAreaWidgetContents_55.setObjectName("scrollAreaWidgetContents_55")
        self.scrollArea_45.setWidget(self.scrollAreaWidgetContents_55)
        self.gridLayout_20.addWidget(self.splitter_13, 1, 0, 1, 1)
        self.gridLayout_46.addWidget(self.splitter_17, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_license_plate_reco)
        self.page_search = QtWidgets.QWidget()
        self.page_search.setObjectName("page_search")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.page_search)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.label_9 = QtWidgets.QLabel(self.page_search)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("")
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.gridLayout_7.addWidget(self.label_9, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_search)
        self.page_user = QtWidgets.QWidget()
        self.page_user.setObjectName("page_user")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.page_user)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_10 = QtWidgets.QLabel(self.page_user)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.gridLayout_8.addWidget(self.label_10, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_user)
        self.verticalLayout_5.addWidget(self.stackedWidget)
        self.gridLayout_35.addWidget(self.widget_3, 0, 3, 1, 1)
        self.layoutWidget6 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget6.setGeometry(QtCore.QRect(0, 0, 16, 16))
        self.layoutWidget6.setObjectName("layoutWidget6")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.layoutWidget6)
        self.gridLayout_12.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(18)
        self.change_btn.toggled['bool'].connect(self.icon_only_widget.setVisible) # type: ignore
        self.change_btn.toggled['bool'].connect(self.full_menu_widget.setHidden) # type: ignore
        self.home_btn_1.toggled['bool'].connect(self.home_btn_2.setChecked) # type: ignore
        self.dashborad_btn_1.toggled['bool'].connect(self.dashborad_btn_2.setChecked) # type: ignore
        self.orders_btn_1.toggled['bool'].connect(self.orders_btn_2.setChecked) # type: ignore
        self.products_btn_1.toggled['bool'].connect(self.products_btn_2.setChecked) # type: ignore
        self.customers_btn_1.toggled['bool'].connect(self.customers_btn_2.setChecked) # type: ignore
        self.home_btn_2.toggled['bool'].connect(self.home_btn_1.setChecked) # type: ignore
        self.dashborad_btn_2.toggled['bool'].connect(self.dashborad_btn_1.setChecked) # type: ignore
        self.orders_btn_2.toggled['bool'].connect(self.orders_btn_1.setChecked) # type: ignore
        self.products_btn_2.toggled['bool'].connect(self.products_btn_1.setChecked) # type: ignore
        self.customers_btn_2.toggled['bool'].connect(self.customers_btn_1.setChecked) # type: ignore
        self.source_btn_2.toggled['bool'].connect(self.source_btn_1.setChecked) # type: ignore
        self.source_btn_1.toggled['bool'].connect(self.source_btn_2.setChecked) # type: ignore
        self.time_range_btn_2.toggled['bool'].connect(self.time_range_btn_1.setChecked) # type: ignore
        self.time_range_btn_1.toggled['bool'].connect(self.time_range_btn_2.setChecked) # type: ignore
        self.class_btn_2.toggled['bool'].connect(self.class_btn_1.setChecked) # type: ignore
        self.class_btn_1.toggled['bool'].connect(self.class_btn_2.setChecked) # type: ignore
        self.person_attributes_btn_2.toggled['bool'].connect(self.person_attributes_btn_1.setChecked) # type: ignore
        self.person_attributes_btn_1.toggled['bool'].connect(self.person_attributes_btn_2.setChecked) # type: ignore
        self.color_btn_2.toggled['bool'].connect(self.color_btn_1.setChecked) # type: ignore
        self.color_btn_1.toggled['bool'].connect(self.color_btn_2.setChecked) # type: ignore
        self.size_btn_2.toggled['bool'].connect(self.size_btn_1.setChecked) # type: ignore
        self.size_btn_1.toggled['bool'].connect(self.size_btn_2.setChecked) # type: ignore
        self.speed_btn_2.toggled['bool'].connect(self.speed_btn_1.setChecked) # type: ignore
        self.speed_btn_1.toggled['bool'].connect(self.speed_btn_2.setChecked) # type: ignore
        self.dwell_btn_2.toggled['bool'].connect(self.dwell_btn_1.setChecked) # type: ignore
        self.dwell_btn_1.toggled['bool'].connect(self.dwell_btn_2.setChecked) # type: ignore
        self.direction_btn_2.toggled['bool'].connect(self.direction_btn_1.setChecked) # type: ignore
        self.direction_btn_1.toggled['bool'].connect(self.direction_btn_2.setChecked) # type: ignore
        self.proximity_btn_2.toggled['bool'].connect(self.proximity_btn_1.setChecked) # type: ignore
        self.proximity_btn_1.toggled['bool'].connect(self.proximity_btn_2.setChecked) # type: ignore
        self.appearance_similarity_btn_2.toggled['bool'].connect(self.appearance_similarity_btn_1.setChecked) # type: ignore
        self.appearance_similarity_btn_1.toggled['bool'].connect(self.appearance_similarity_btn_2.setChecked) # type: ignore
        self.face_recognition_btn_2.toggled['bool'].connect(self.face_recognition_btn_1.setChecked) # type: ignore
        self.face_recognition_btn_1.toggled['bool'].connect(self.face_recognition_btn_2.setChecked) # type: ignore
        self.License_plate_reco_btn_2.toggled['bool'].connect(self.License_plate_reco_btn_1.setChecked) # type: ignore
        self.License_plate_reco_btn_1.toggled['bool'].connect(self.License_plate_reco_btn_2.setChecked) # type: ignore
        self.page_proximity_Button.toggled['bool'].connect(self.scrollArea_29.setHidden) # type: ignore
        self.page_size_Button.toggled['bool'].connect(self.scrollArea_24.setHidden) # type: ignore
        self.page_dwell_Button.toggled['bool'].connect(self.scrollArea_35.setHidden) # type: ignore
        self.page_speed_Button_fitter.toggled['bool'].connect(self.scrollArea_26.setHidden) # type: ignore
        self.page_proximity_Button_fitter.toggled['bool'].connect(self.scrollArea_30.setHidden) # type: ignore
        self.page_size_Button_fitter.toggled['bool'].connect(self.scrollArea_21.setHidden) # type: ignore
        self.time_range__Button_fitter.toggled['bool'].connect(self.scrollArea_13.setHidden) # type: ignore
        self.source_Button_fitter.toggled['bool'].connect(self.source_menu_widget.setHidden) # type: ignore
        self.class_Button_fitter.toggled['bool'].connect(self.class_scrollArea.setHidden) # type: ignore
        self.source_Button.toggled['bool'].connect(self.source_menu_widget_2.setHidden) # type: ignore
        self.page_speed_Button.toggled['bool'].connect(self.scrollArea_27.setHidden) # type: ignore
        self.page_license_plate_reco_Button_fitter.toggled['bool'].connect(self.scrollArea_45.setHidden) # type: ignore
        self.page_face_reco_Button.toggled['bool'].connect(self.scrollArea_41.setHidden) # type: ignore
        self.class_Button.toggled['bool'].connect(self.class_fitter_scrollArea.setHidden) # type: ignore
        self.page_direction_Button_fitter.toggled['bool'].connect(self.scrollArea_33.setHidden) # type: ignore
        self.page_license_plate_reco_Button.toggled['bool'].connect(self.scrollArea_44.setHidden) # type: ignore
        self.page_dwell_Button_fitter.toggled['bool'].connect(self.scrollArea_36.setHidden) # type: ignore
        self.page_person_Button.toggled['bool'].connect(self.scrollArea_18.setHidden) # type: ignore
        self.page_direction_Button.toggled['bool'].connect(self.scrollArea_32.setHidden) # type: ignore
        self.page_color_Button.toggled['bool'].connect(self.scrollArea_20.setHidden) # type: ignore
        self.time_range_Button.toggled['bool'].connect(self.scrollArea_14.setHidden) # type: ignore
        self.page_face_reco_Button_fitter.toggled['bool'].connect(self.scrollArea_42.setHidden) # type: ignore
        self.page_color_Button_fitter.toggled['bool'].connect(self.scrollArea_19.setHidden) # type: ignore
        self.page_person_Button_fitter.toggled['bool'].connect(self.scrollArea_17.setHidden) # type: ignore
        self.class_Button.toggled['bool'].connect(self.frame.setHidden) # type: ignore
        self.page_appearance_similarity_Button.toggled['bool'].connect(self.scrollArea_37.setHidden) # type: ignore
        self.page_appearance_similarity_Button_fitter.toggled['bool'].connect(self.scrollArea_39.setHidden) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.home_btn_2.setText(_translate("MainWindow", "Home"))
        self.dashborad_btn_2.setText(_translate("MainWindow", "Dashboard"))
        self.orders_btn_2.setText(_translate("MainWindow", "Orders"))
        self.products_btn_2.setText(_translate("MainWindow", "Products"))
        self.customers_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.customers_btn_2.setText(_translate("MainWindow", "Customers"))
        self.source_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.source_btn_2.setText(_translate("MainWindow", "Source"))
        self.time_range_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.time_range_btn_2.setText(_translate("MainWindow", "Time Range"))
        self.class_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.class_btn_2.setText(_translate("MainWindow", "Class"))
        self.person_attributes_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.person_attributes_btn_2.setText(_translate("MainWindow", "Person Attributes"))
        self.color_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.color_btn_2.setText(_translate("MainWindow", "Color"))
        self.size_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.size_btn_2.setText(_translate("MainWindow", "Size"))
        self.speed_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.speed_btn_2.setText(_translate("MainWindow", "Speed"))
        self.dwell_btn_2.setText(_translate("MainWindow", "Dwell"))
        self.direction_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.direction_btn_2.setText(_translate("MainWindow", "Direction"))
        self.proximity_btn_2.setText(_translate("MainWindow", "Proximity"))
        self.appearance_similarity_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.appearance_similarity_btn_2.setText(_translate("MainWindow", "Appearance Similarity"))
        self.face_recognition_btn_2.setText(_translate("MainWindow", "Face recognition"))
        self.License_plate_reco_btn_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.License_plate_reco_btn_2.setText(_translate("MainWindow", "License plate reco"))
        self.exit_btn_2.setText(_translate("MainWindow", "Exit"))
        self.search_input.setPlaceholderText(_translate("MainWindow", "Search..."))
        self.label_4.setText(_translate("MainWindow", "Home Page"))
        self.label_5.setText(_translate("MainWindow", "Dashboard Page"))
        self.label_6.setText(_translate("MainWindow", "Orders Page"))
        self.label_7.setText(_translate("MainWindow", "Product Page"))
        self.label_8.setText(_translate("MainWindow", "Customers Page"))
        self.source_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.source_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">people , chill , </p></body></html>"))
        self.time_range_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.time_range__time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.class_banana_checkBox.setText(_translate("MainWindow", "Banana"))
        self.class_tennis_racket_checkBox.setText(_translate("MainWindow", "Tennis racket"))
        self.class_microwave_checkBox.setText(_translate("MainWindow", "Microwave"))
        self.class_bench_checkBox.setText(_translate("MainWindow", "Ghế dài"))
        self.class_scissors_checkBox.setText(_translate("MainWindow", "Scissors"))
        self.class_truck_checkBox.setText(_translate("MainWindow", "Xe tải cỡ nhỏ"))
        self.class_hair_drier_checkBox.setText(_translate("MainWindow", "Hair drier"))
        self.class_dining_table_checkBox.setText(_translate("MainWindow", "Dining table"))
        self.class_woman_checkBox.setText(_translate("MainWindow", "Nữ"))
        self.class_laptop_checkBox.setText(_translate("MainWindow", "Laptop"))
        self.class_no_safety_vest_checkBox.setText(_translate("MainWindow", "Không mặc áo khoác"))
        self.class_potted_plant_checkBox.setText(_translate("MainWindow", "Potted plant"))
        self.class_airplane_checkBox.setText(_translate("MainWindow", "Máy bay"))
        self.class_giraffe_checkBox.setText(_translate("MainWindow", "Giraffe"))
        self.class_donut_checkBox.setText(_translate("MainWindow", "Donut"))
        self.class_wine_glass_checkBox.setText(_translate("MainWindow", "Wine glass"))
        self.class_bowl_checkBox.setText(_translate("MainWindow", "Bowl"))
        self.class_parking_meter_checkBox.setText(_translate("MainWindow", "Máy thu tiền đỗ xe"))
        self.class_toothbrush_checkBox.setText(_translate("MainWindow", "Toothbrush"))
        self.class_oven_checkBox.setText(_translate("MainWindow", "Oven"))
        self.class_other_checkBox.setText(_translate("MainWindow", "Khác"))
        self.class_mouse_checkBox.setText(_translate("MainWindow", "Mouse"))
        self.class_stop_sign_checkBox.setText(_translate("MainWindow", "Biển báo dừng"))
        self.class_child_checkBox.setText(_translate("MainWindow", "Trẻ con"))
        self.class_backpack_checkBox.setText(_translate("MainWindow", "Backpack"))
        self.class_cat_checkBox.setText(_translate("MainWindow", "Con mèo"))
        self.class_sheep_checkBox.setText(_translate("MainWindow", "Sheep"))
        self.class_vehicle_checkBox.setText(_translate("MainWindow", "Xe 2 bánh"))
        self.class_train_checkBox.setText(_translate("MainWindow", "Tàu hỏa"))
        self.class_refrigerator_checkBox.setText(_translate("MainWindow", "Refrigerator"))
        self.class_umbrella_checkBox.setText(_translate("MainWindow", "Umbrella"))
        self.class_book_checkBox.setText(_translate("MainWindow", "Book"))
        self.class_boat_checkBox.setText(_translate("MainWindow", "Thuyền"))
        self.class_fork_checkBox.setText(_translate("MainWindow", "Fork"))
        self.class_traffic_light_checkBox.setText(_translate("MainWindow", "Đèn giao thông"))
        self.class_cup_checkBox.setText(_translate("MainWindow", "Cup"))
        self.class_cake_checkBox.setText(_translate("MainWindow", "Cake"))
        self.class_zebra_checkBox.setText(_translate("MainWindow", "Zebra"))
        self.class_bear_checkBox.setText(_translate("MainWindow", "Bear"))
        self.class_car_checkBox.setText(_translate("MainWindow", "Xe ô tô con"))
        self.class_fire_hydrant_checkBox.setText(_translate("MainWindow", "Vòi chữa cháy"))
        self.class_cow_checkBox.setText(_translate("MainWindow", "Cow"))
        self.class_teddy_bear_checkBox.setText(_translate("MainWindow", "Teddy bear"))
        self.class_handbag_checkBox.setText(_translate("MainWindow", "Handbag"))
        self.class_broccoli_checkBox.setText(_translate("MainWindow", "Broccoli"))
        self.class_keyboard_checkBox.setText(_translate("MainWindow", "Keyboard"))
        self.class_people_checkBox.setText(_translate("MainWindow", "Con Người"))
        self.class_birird_checkBox.setText(_translate("MainWindow", "Con chim"))
        self.class_knife_checkBox.setText(_translate("MainWindow", "Knife"))
        self.class_man_checkBox.setText(_translate("MainWindow", "Nam"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:20pt; font-weight:600;\">Bộ Lọc</span></p></body></html>"))
        self.class_spoon_checkBox.setText(_translate("MainWindow", "Spoon"))
        self.class_sink_checkBox.setText(_translate("MainWindow", "Sink"))
        self.class_toilet_checkBox.setText(_translate("MainWindow", "Toilet"))
        self.class_motorcycle_checkBox.setText(_translate("MainWindow", "Xe máy"))
        self.class_van_checkBox.setText(_translate("MainWindow", "Xe tải cỡ lớn"))
        self.class_toaster_checkBox.setText(_translate("MainWindow", "Toaster"))
        self.class_apple_checkBox.setText(_translate("MainWindow", "Apple"))
        self.class_chair_checkBox.setText(_translate("MainWindow", "Chair"))
        self.class_tv_checkBox.setText(_translate("MainWindow", "TV"))
        self.class_sandwich_checkBox.setText(_translate("MainWindow", "Sandwich"))
        self.class_vehicle_other_checkBox.setText(_translate("MainWindow", "Xe khác"))
        self.class_cell_phone_checkBox.setText(_translate("MainWindow", "Cell phone"))
        self.class_orange_checkBox.setText(_translate("MainWindow", "Orange"))
        self.class_pizza_checkBox.setText(_translate("MainWindow", "Pizza"))
        self.class_carrot_checkBox.setText(_translate("MainWindow", "Carrot"))
        self.class_clock_checkBox.setText(_translate("MainWindow", "Clock"))
        self.class_remote_checkBox.setText(_translate("MainWindow", "Remote"))
        self.class_dog_checkBox.setText(_translate("MainWindow", "Con chó"))
        self.class_safety_vest_checkBox.setText(_translate("MainWindow", "Mặc áo khoác"))
        self.class_vase_checkBox.setText(_translate("MainWindow", "Vase"))
        self.class_bicycle_checkBox.setText(_translate("MainWindow", "Xe đạp"))
        self.class_horse_checkBox.setText(_translate("MainWindow", "Con ngựa"))
        self.class_bed_checkBox.setText(_translate("MainWindow", "Bed"))
        self.class_hot_dog_checkBox.setText(_translate("MainWindow", "Hot dog"))
        self.class_elephant_checkBox.setText(_translate("MainWindow", "Elephant"))
        self.class_couch_checkBox.setText(_translate("MainWindow", "Couch"))
        self.class_bottle_checkBox.setText(_translate("MainWindow", "Bottle"))
        self.page_person_tolerance_low_checkBox_2.setText(_translate("MainWindow", "Thấp"))
        self.page_person_tolerance_high_checkBox_2.setText(_translate("MainWindow", "Cao"))
        self.page_person_tolerance_medium_checkBox_2.setText(_translate("MainWindow", "Khá"))
        self.label_2.setText(_translate("MainWindow", "Ngưỡng nhận diện"))
        self.class_reset_Button.setText(_translate("MainWindow", "RESET"))
        self.class_apply_Button.setText(_translate("MainWindow", "APPLY"))
        self.class_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.class_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_person_face_mark_checkBox.setText(_translate("MainWindow", "Có khẩu trang"))
        self.label_29.setText(_translate("MainWindow", "Khẩu trang"))
        self.page_person_shot_sleeves_checkBox.setText(_translate("MainWindow", "Áo ngắn tay"))
        self.label_25.setText(_translate("MainWindow", "Màu áo"))
        self.label_27.setText(_translate("MainWindow", "Màu quần"))
        self.label_28.setText(_translate("MainWindow", "Mũ"))
        self.page_person_trousers_checkBox.setText(_translate("MainWindow", "Quần dài"))
        self.label_23.setText(_translate("MainWindow", "LỌC THEO ÁO :"))
        self.page_person_long_sleeves_checkBox.setText(_translate("MainWindow", "Áo dài tay"))
        self.label_26.setText(_translate("MainWindow", "LỌC THEO QUẦN"))
        self.page_person_trouser_short_checkBox.setText(_translate("MainWindow", "Quần ngắn"))
        self.page_person_hat_checkBox.setText(_translate("MainWindow", "Có Mũ"))
        self.page_person_shade_low_checkBox.setText(_translate("MainWindow", "Thấp"))
        self.label_30.setText(_translate("MainWindow", "Độ đậm của màu:"))
        self.page_person_shade_medium_checkBox.setText(_translate("MainWindow", "Khá"))
        self.label_31.setText(_translate("MainWindow", "Độ bao phủ màu:"))
        self.page_person_coverage_low_checkBox.setText(_translate("MainWindow", "Thấp"))
        self.page_person_shade_high_checkBox.setText(_translate("MainWindow", "Cao"))
        self.page_person_tolerance_low_checkBox.setText(_translate("MainWindow", "Thấp"))
        self.page_person_coverage_medium_checkBox.setText(_translate("MainWindow", "Khá"))
        self.page_person_coverage_high_checkBox.setText(_translate("MainWindow", "Cao"))
        self.page_person_tolerance_medium_checkBox.setText(_translate("MainWindow", "Khá"))
        self.page_person_tolerance_high_checkBox.setText(_translate("MainWindow", "Cao"))
        self.page_person_reset_Button.setText(_translate("MainWindow", "XÓA"))
        self.page_person_apply_Button.setText(_translate("MainWindow", "ÁP DỤNG"))
        self.label_32.setText(_translate("MainWindow", "Ngưỡng nhận diện:"))
        self.page_person_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_person_text_fitter_label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.label_40.setText(_translate("MainWindow", "LỌC THEO MÀU:"))
        self.page_color_reset_Button.setText(_translate("MainWindow", "XÓA"))
        self.label_33.setText(_translate("MainWindow", "Độ đậm của màu:"))
        self.label_34.setText(_translate("MainWindow", "Độ bao phủ màu:"))
        self.page_color_apply_Button.setText(_translate("MainWindow", "ÁP DỤNG"))
        self.page_color_coverage_high_checkBox.setText(_translate("MainWindow", "Cao"))
        self.page_color_shade_low_checkBox.setText(_translate("MainWindow", "Thấp"))
        self.page_color_coverage_medium_checkBox.setText(_translate("MainWindow", "Khá"))
        self.page_color_shade_medium_checkBox.setText(_translate("MainWindow", "Khá"))
        self.page_color_coverage_low_checkBox.setText(_translate("MainWindow", "Thấp"))
        self.page_color_shade_high_checkBox.setText(_translate("MainWindow", "Cao"))
        self.page_color_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_color_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_size_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_size_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_speed_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_speed_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_dwell_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_dwell_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_direction_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_direction_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_proximity_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_proximity_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_appearance_similarity_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_appearance_similarity_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_face_reco_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.page_face_reco_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_license_plate_reco_time_label.setText(_translate("MainWindow", "3/1/2024 10:34:12  - 3/1/2024 11:11:11"))
        self.page_license_plate_reco_text_fitter_label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"> People , Man , Child</p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "Search Page"))
        self.label_10.setText(_translate("MainWindow", "User Page"))
import icon.resource_rc
